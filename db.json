{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/neXT/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/JG.jpg","path":"images/JG.jpg","modified":1,"renderable":1},{"_id":"themes/neXT/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/neXT/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/neXT/source/images/jake.jpg","path":"images/jake.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/neXT/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1477927803000},{"_id":"themes/neXT/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1477927803000},{"_id":"themes/neXT/.gitignore","hash":"efec790f5b7a0256763e1cc08f12c4f0aff509f6","modified":1477927803000},{"_id":"themes/neXT/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1477927803000},{"_id":"themes/neXT/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1477927803000},{"_id":"themes/neXT/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1477927803000},{"_id":"themes/neXT/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1477927803000},{"_id":"themes/neXT/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1477927803000},{"_id":"themes/neXT/_config.yml","hash":"47085792e6ff7ef8610e6d8a32930c2c4dffa0f5","modified":1478047986000},{"_id":"themes/neXT/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1477927803000},{"_id":"themes/neXT/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1477927803000},{"_id":"themes/neXT/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1477927803000},{"_id":"source/categories/index.md","hash":"2818e0f3e0f6f34730ff4042a4dfb8d5fd09d70d","modified":1478045792000},{"_id":"source/_posts/How-to-launch-apps-with-shell-command.md","hash":"8e60f7b04d9fbb01f70ef9b002aa0c3578f4dbd0","modified":1478048843000},{"_id":"source/_posts/Language-and-timezone.md","hash":"0a36b031ce21d990d81418477dbda41a50152567","modified":1478048426000},{"_id":"source/_posts/Use-KVM-to-customize-an-mirror-for-openstack.md","hash":"de15969f470e300d1b1d6b3ebb96152c16edab8c","modified":1478273285000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1477927803000},{"_id":"source/_posts/first-post.md","hash":"ffde92bbfcc5c9ab087a65e9254c10c742091c47","modified":1478273725000},{"_id":"source/tags/index.md","hash":"7e2a2412a833859200e1f5959c202c8f40b365d8","modified":1478047931000},{"_id":"themes/neXT/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1477927803000},{"_id":"themes/neXT/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1477927803000},{"_id":"themes/neXT/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1477927803000},{"_id":"themes/neXT/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1477927803000},{"_id":"themes/neXT/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1477927803000},{"_id":"themes/neXT/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1477927803000},{"_id":"themes/neXT/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1477927803000},{"_id":"themes/neXT/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1477927803000},{"_id":"themes/neXT/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1477927803000},{"_id":"themes/neXT/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1477927803000},{"_id":"themes/neXT/languages/zh-CN.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1477927803000},{"_id":"themes/neXT/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1477927803000},{"_id":"themes/neXT/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1477927803000},{"_id":"themes/neXT/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1477927803000},{"_id":"themes/neXT/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1477927803000},{"_id":"themes/neXT/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1477927803000},{"_id":"themes/neXT/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1477927803000},{"_id":"themes/neXT/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1477927803000},{"_id":"themes/neXT/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1477927803000},{"_id":"themes/neXT/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1477927803000},{"_id":"themes/neXT/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1477927803000},{"_id":"themes/neXT/test/.jshintrc","hash":"096ed6df627373edd820f24d46b8baf528dee61d","modified":1477927803000},{"_id":"themes/neXT/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1477927803000},{"_id":"themes/neXT/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1477927803000},{"_id":"themes/neXT/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477927803000},{"_id":"themes/neXT/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1477927803000},{"_id":"themes/neXT/layout/_macro/post.swig","hash":"1ca03011bed92614832b1343b65be92183957dc5","modified":1477927803000},{"_id":"themes/neXT/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1477927803000},{"_id":"themes/neXT/layout/_macro/sidebar.swig","hash":"b883289054ee54a374caad5d4883591beb94bd8b","modified":1477927803000},{"_id":"themes/neXT/layout/_macro/wechat-subscriber.swig","hash":"85327c2174d09c6d69c9033592e6c8f7eb7ac3ba","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/comments.swig","hash":"82a9bc2ba60ce68419128ff60624bd74b15dfb78","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/footer.swig","hash":"0ce71d8322ea7dea82d9371fa2fe13949aa870e3","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/head.swig","hash":"f83b1c55bedd2c1a3eb734c72c6997795a4e5f99","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/header.swig","hash":"963a765dc00e6ac43cfc53ffaf5725eb854cf95e","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1477927803000},{"_id":"themes/neXT/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1477927803000},{"_id":"themes/neXT/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1477927803000},{"_id":"themes/neXT/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1477927803000},{"_id":"themes/neXT/source/css/main.styl","hash":"c0228d7ac92b4eb17e19a43d35292d98f61bc43f","modified":1477927803000},{"_id":"themes/neXT/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1477927803000},{"_id":"themes/neXT/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1477927803000},{"_id":"themes/neXT/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1477927803000},{"_id":"themes/neXT/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1477927803000},{"_id":"themes/neXT/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1477927803000},{"_id":"themes/neXT/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1477927803000},{"_id":"themes/neXT/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1477927803000},{"_id":"themes/neXT/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1477927803000},{"_id":"themes/neXT/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1477927803000},{"_id":"themes/neXT/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1477927803000},{"_id":"themes/neXT/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1477927803000},{"_id":"themes/neXT/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1477927803000},{"_id":"themes/neXT/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477927803000},{"_id":"themes/neXT/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477927803000},{"_id":"themes/neXT/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477927803000},{"_id":"themes/neXT/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477927803000},{"_id":"themes/neXT/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477927803000},{"_id":"themes/neXT/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1477927803000},{"_id":"themes/neXT/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/lean-analytics.swig","hash":"069bb17fb1db3bc7c85c88efa3ed94ab6becbe2c","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/localsearch.swig","hash":"1561bd0c107d725252c6d746e9ac177fc18f93bf","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1477927803000},{"_id":"themes/neXT/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1477927803000},{"_id":"themes/neXT/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1477927803000},{"_id":"themes/neXT/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1477927803000},{"_id":"themes/neXT/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1477927803000},{"_id":"themes/neXT/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1477927803000},{"_id":"themes/neXT/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1477927803000},{"_id":"themes/neXT/source/images/JG.jpg","hash":"ff6c8b860abac248dd28db748fbfe3b9bfab1cf3","modified":1477927803000},{"_id":"themes/neXT/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1477927803000},{"_id":"themes/neXT/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1477927803000},{"_id":"themes/neXT/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1477927803000},{"_id":"themes/neXT/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1477927803000},{"_id":"themes/neXT/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1477927803000},{"_id":"themes/neXT/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1477927803000},{"_id":"themes/neXT/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1477927803000},{"_id":"themes/neXT/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1477927803000},{"_id":"themes/neXT/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1477927803000},{"_id":"themes/neXT/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1477927803000},{"_id":"themes/neXT/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1477927803000},{"_id":"themes/neXT/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1477927803000},{"_id":"themes/neXT/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1477927803000},{"_id":"themes/neXT/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1477927803000},{"_id":"themes/neXT/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1477927803000},{"_id":"themes/neXT/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1477927803000},{"_id":"themes/neXT/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1477927803000},{"_id":"themes/neXT/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1477927803000},{"_id":"themes/neXT/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1477927803000},{"_id":"themes/neXT/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"44e761721e8ad787ef571a3cc57bbc12d318a2a3","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"334176d838ee528e58468d8bc74ff3a6d3f25b2b","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/comments/disqus.swig","hash":"3491d3cebabc8a28857200db28a1be65aad6adc2","modified":1477927803000},{"_id":"themes/neXT/layout/_scripts/third-party/comments/duoshuo.swig","hash":"8c7af79407d223486fba72b8150fe045a553bf70","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Pisces/index.styl","hash":"1b5b96e511d0cc9d267ee4f12b3f0ed4baa4db5c","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1477927803000},{"_id":"themes/neXT/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1477927803000},{"_id":"themes/neXT/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1477927803000},{"_id":"themes/neXT/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1477927803000},{"_id":"themes/neXT/source/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1477927803000},{"_id":"themes/neXT/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1477927803000},{"_id":"themes/neXT/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1477927803000},{"_id":"themes/neXT/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1477927803000},{"_id":"themes/neXT/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1477927803000},{"_id":"themes/neXT/source/images/jake.jpg","hash":"bc87f9b9adee484a4da76dbbee7108c76f809d67","modified":1477927803000}],"Category":[{"name":"tricks","_id":"civ3y1qrm00046w22h6wjz8wt"},{"name":"trials","_id":"civ3y1qry00096w22cdcor2j1"}],"Data":[],"Page":[{"title":"categories","date":"2016-11-02T00:15:25.000Z","type":"categories","comments":1,"_content":"\n\n","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-11-02 08:15:25\ntype: \"categories\"\ncomments: true\n---\n\n\n","updated":"2016-11-02T00:16:32.000Z","path":"categories/index.html","layout":"page","_id":"civ3y1qrb00006w22ezpy72kh","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-11-02T00:51:32.000Z","type":"tags","_content":"\n\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-11-02 08:51:32\ntype: \"tags\"\n---\n\n\n","updated":"2016-11-02T00:52:11.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"civ3y1qrh00026w221b9rld7s","content":"","excerpt":"","more":""}],"Post":[{"title":"How to launch apps with shell command","date":"2016-11-02T00:08:48.000Z","_content":"\n# 就像vim那样在shell终端启动应用程序吧！\n自从习惯使用终端进行操作之后，就越来越习惯这么做了，当然在没有完全发挥vim潜能的情况下，使用图形化编辑器还是一个比较好的选择。那么，如果能够像vim那样输入一个命令就启动编辑器，也是一个很棒的功能。\n下面给出了两种实现方法，按需要来吧。感觉第一种比较厉害，但是不是一直有效，第二种方法的适用程度应该更高\n\n1.在usr/local/bin/ 目录下创建软件可执行程序的软连接。\n以sublime text为例\n\t\n\tsudo ln -s /Application/Sublime\\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl\n\t\n然后就可以像这样在终端进行使用啦\n\n\tsubl [filename]\n\t\n2.使用alias自定义shell命令，那么这次使用MWeb lite为例，因为使用第一种方法为它创建命令，执行后会报错\n切换到~\n\n\tvim .bash_profile\n\t\n添加如下内容\n\n\talias mwebl='open -a /Applications/MWeb\\ Lite.app/Contents/MacOS/MWeb\\ Lite'\n\t\n然后保存并退出，执行如下命令\n\n\tsource .bash_profile\n\t\n那么就可以像这样使用MWeb lite编辑md文件了\n\n\tmwebl ./source/_post/somepost.md\n\t\n这样使用hexo新建md之后就可以接着敲命令将其打开进行编辑了，哈哈不要用鼠标点来点去。\n\n3.其实也可以将第二种方法的命令放到一个sh中，但是可以把sh脚本作为命令吗？其实把这个放在更具体的应用下好像也不错。\n\n\n","source":"_posts/How-to-launch-apps-with-shell-command.md","raw":"---\ntitle: How to launch apps with shell command\ndate: 2016-11-02 08:08:48\ntags: [linux, Unix, OSX, link]\ncategories: [tricks]\n---\n\n# 就像vim那样在shell终端启动应用程序吧！\n自从习惯使用终端进行操作之后，就越来越习惯这么做了，当然在没有完全发挥vim潜能的情况下，使用图形化编辑器还是一个比较好的选择。那么，如果能够像vim那样输入一个命令就启动编辑器，也是一个很棒的功能。\n下面给出了两种实现方法，按需要来吧。感觉第一种比较厉害，但是不是一直有效，第二种方法的适用程度应该更高\n\n1.在usr/local/bin/ 目录下创建软件可执行程序的软连接。\n以sublime text为例\n\t\n\tsudo ln -s /Application/Sublime\\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl\n\t\n然后就可以像这样在终端进行使用啦\n\n\tsubl [filename]\n\t\n2.使用alias自定义shell命令，那么这次使用MWeb lite为例，因为使用第一种方法为它创建命令，执行后会报错\n切换到~\n\n\tvim .bash_profile\n\t\n添加如下内容\n\n\talias mwebl='open -a /Applications/MWeb\\ Lite.app/Contents/MacOS/MWeb\\ Lite'\n\t\n然后保存并退出，执行如下命令\n\n\tsource .bash_profile\n\t\n那么就可以像这样使用MWeb lite编辑md文件了\n\n\tmwebl ./source/_post/somepost.md\n\t\n这样使用hexo新建md之后就可以接着敲命令将其打开进行编辑了，哈哈不要用鼠标点来点去。\n\n3.其实也可以将第二种方法的命令放到一个sh中，但是可以把sh脚本作为命令吗？其实把这个放在更具体的应用下好像也不错。\n\n\n","slug":"How-to-launch-apps-with-shell-command","published":1,"updated":"2016-11-02T01:07:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ3y1qrd00016w22cqchsfu9","content":"<h1 id=\"就像vim那样在shell终端启动应用程序吧！\"><a href=\"#就像vim那样在shell终端启动应用程序吧！\" class=\"headerlink\" title=\"就像vim那样在shell终端启动应用程序吧！\"></a>就像vim那样在shell终端启动应用程序吧！</h1><p>自从习惯使用终端进行操作之后，就越来越习惯这么做了，当然在没有完全发挥vim潜能的情况下，使用图形化编辑器还是一个比较好的选择。那么，如果能够像vim那样输入一个命令就启动编辑器，也是一个很棒的功能。<br>下面给出了两种实现方法，按需要来吧。感觉第一种比较厉害，但是不是一直有效，第二种方法的适用程度应该更高</p>\n<p>1.在usr/local/bin/ 目录下创建软件可执行程序的软连接。<br>以sublime text为例</p>\n<pre><code>sudo ln -s /Application/Sublime\\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl\n</code></pre><p>然后就可以像这样在终端进行使用啦</p>\n<pre><code>subl [filename]\n</code></pre><p>2.使用alias自定义shell命令，那么这次使用MWeb lite为例，因为使用第一种方法为它创建命令，执行后会报错<br>切换到~</p>\n<pre><code>vim .bash_profile\n</code></pre><p>添加如下内容</p>\n<pre><code>alias mwebl=&apos;open -a /Applications/MWeb\\ Lite.app/Contents/MacOS/MWeb\\ Lite&apos;\n</code></pre><p>然后保存并退出，执行如下命令</p>\n<pre><code>source .bash_profile\n</code></pre><p>那么就可以像这样使用MWeb lite编辑md文件了</p>\n<pre><code>mwebl ./source/_post/somepost.md\n</code></pre><p>这样使用hexo新建md之后就可以接着敲命令将其打开进行编辑了，哈哈不要用鼠标点来点去。</p>\n<p>3.其实也可以将第二种方法的命令放到一个sh中，但是可以把sh脚本作为命令吗？其实把这个放在更具体的应用下好像也不错。</p>\n","excerpt":"","more":"<h1 id=\"就像vim那样在shell终端启动应用程序吧！\"><a href=\"#就像vim那样在shell终端启动应用程序吧！\" class=\"headerlink\" title=\"就像vim那样在shell终端启动应用程序吧！\"></a>就像vim那样在shell终端启动应用程序吧！</h1><p>自从习惯使用终端进行操作之后，就越来越习惯这么做了，当然在没有完全发挥vim潜能的情况下，使用图形化编辑器还是一个比较好的选择。那么，如果能够像vim那样输入一个命令就启动编辑器，也是一个很棒的功能。<br>下面给出了两种实现方法，按需要来吧。感觉第一种比较厉害，但是不是一直有效，第二种方法的适用程度应该更高</p>\n<p>1.在usr/local/bin/ 目录下创建软件可执行程序的软连接。<br>以sublime text为例</p>\n<pre><code>sudo ln -s /Application/Sublime\\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl\n</code></pre><p>然后就可以像这样在终端进行使用啦</p>\n<pre><code>subl [filename]\n</code></pre><p>2.使用alias自定义shell命令，那么这次使用MWeb lite为例，因为使用第一种方法为它创建命令，执行后会报错<br>切换到~</p>\n<pre><code>vim .bash_profile\n</code></pre><p>添加如下内容</p>\n<pre><code>alias mwebl=&apos;open -a /Applications/MWeb\\ Lite.app/Contents/MacOS/MWeb\\ Lite&apos;\n</code></pre><p>然后保存并退出，执行如下命令</p>\n<pre><code>source .bash_profile\n</code></pre><p>那么就可以像这样使用MWeb lite编辑md文件了</p>\n<pre><code>mwebl ./source/_post/somepost.md\n</code></pre><p>这样使用hexo新建md之后就可以接着敲命令将其打开进行编辑了，哈哈不要用鼠标点来点去。</p>\n<p>3.其实也可以将第二种方法的命令放到一个sh中，但是可以把sh脚本作为命令吗？其实把这个放在更具体的应用下好像也不错。</p>\n"},{"title":"Language and timezone","date":"2016-11-02T00:44:00.000Z","_content":"# 语言文化代码和时区要怎么写呢？\n建好这个博客之后才发现语言有些奇怪，居然是德语，难道没设置语言默认就是如此吗。。\n那么就在_config.yml当中配置一下吧，不过这个字段要怎么写呢？[语言与文化代码](http://blog.csdn.net/hao95165/article/details/50730432)\n\n最后我选择了en，嗯因为next的language里面有en.yml。\n\n时区，这个默认看起来没有问题，在这里记录科普一下吧. [时区代码](http://wenku.baidu.com/link?url=-fB3Z8PSZoi-XPmz6Rn1QzQLL7iQBMObX2To60NlC72m1jp40vxa8W-VQEMaGVhvwfvXfYibwMycweC9xXqNRA1nMPVs2uSQHHw-UBVt02O)\n\n哈哈都是超链接，懒得自己整理了。\n\n","source":"_posts/Language-and-timezone.md","raw":"---\ntitle: Language and timezone\ndate: 2016-11-02 08:44:00\ntags:\n---\n# 语言文化代码和时区要怎么写呢？\n建好这个博客之后才发现语言有些奇怪，居然是德语，难道没设置语言默认就是如此吗。。\n那么就在_config.yml当中配置一下吧，不过这个字段要怎么写呢？[语言与文化代码](http://blog.csdn.net/hao95165/article/details/50730432)\n\n最后我选择了en，嗯因为next的language里面有en.yml。\n\n时区，这个默认看起来没有问题，在这里记录科普一下吧. [时区代码](http://wenku.baidu.com/link?url=-fB3Z8PSZoi-XPmz6Rn1QzQLL7iQBMObX2To60NlC72m1jp40vxa8W-VQEMaGVhvwfvXfYibwMycweC9xXqNRA1nMPVs2uSQHHw-UBVt02O)\n\n哈哈都是超链接，懒得自己整理了。\n\n","slug":"Language-and-timezone","published":1,"updated":"2016-11-02T01:00:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ3y1qrj00036w22ahdhfv2m","content":"<h1 id=\"语言文化代码和时区要怎么写呢？\"><a href=\"#语言文化代码和时区要怎么写呢？\" class=\"headerlink\" title=\"语言文化代码和时区要怎么写呢？\"></a>语言文化代码和时区要怎么写呢？</h1><p>建好这个博客之后才发现语言有些奇怪，居然是德语，难道没设置语言默认就是如此吗。。<br>那么就在_config.yml当中配置一下吧，不过这个字段要怎么写呢？<a href=\"http://blog.csdn.net/hao95165/article/details/50730432\" target=\"_blank\" rel=\"external\">语言与文化代码</a></p>\n<p>最后我选择了en，嗯因为next的language里面有en.yml。</p>\n<p>时区，这个默认看起来没有问题，在这里记录科普一下吧. <a href=\"http://wenku.baidu.com/link?url=-fB3Z8PSZoi-XPmz6Rn1QzQLL7iQBMObX2To60NlC72m1jp40vxa8W-VQEMaGVhvwfvXfYibwMycweC9xXqNRA1nMPVs2uSQHHw-UBVt02O\" target=\"_blank\" rel=\"external\">时区代码</a></p>\n<p>哈哈都是超链接，懒得自己整理了。</p>\n","excerpt":"","more":"<h1 id=\"语言文化代码和时区要怎么写呢？\"><a href=\"#语言文化代码和时区要怎么写呢？\" class=\"headerlink\" title=\"语言文化代码和时区要怎么写呢？\"></a>语言文化代码和时区要怎么写呢？</h1><p>建好这个博客之后才发现语言有些奇怪，居然是德语，难道没设置语言默认就是如此吗。。<br>那么就在_config.yml当中配置一下吧，不过这个字段要怎么写呢？<a href=\"http://blog.csdn.net/hao95165/article/details/50730432\">语言与文化代码</a></p>\n<p>最后我选择了en，嗯因为next的language里面有en.yml。</p>\n<p>时区，这个默认看起来没有问题，在这里记录科普一下吧. <a href=\"http://wenku.baidu.com/link?url=-fB3Z8PSZoi-XPmz6Rn1QzQLL7iQBMObX2To60NlC72m1jp40vxa8W-VQEMaGVhvwfvXfYibwMycweC9xXqNRA1nMPVs2uSQHHw-UBVt02O\">时区代码</a></p>\n<p>哈哈都是超链接，懒得自己整理了。</p>\n"},{"title":"Use Kvm to customize an mirror for openstack","date":"2016-11-03T02:15:31.000Z","_content":"\n# 在linux上使用kvm，qemu，vnc等工具进行虚拟机定制以及qcow2镜像的生成\n由于，这里有一个基于openstack的教学项目，所以，真的要把这个镜像做出来了，不然月底要完蛋。\n服务器上应该是已经安装好了kvm相关环境，但是学弟遇到了一些问题一直没有解决，今天我自己看一看吧。用服务器来做总比用虚拟机强。\n\n## 基础环境检查与简单配置\n[参考内容1](http://www.111cn.net/sys/CentOS/87211.htm)\n[参考内容2](http://www.vpsee.com/2012/02/create-centos-kvm-image-for-openstack-nova/)\nIntel cpu\n\n\tcat /proc/cpuinfo | grep \"vmx\"\nAMD cpu\n\n\tcat /proc/cpuinfo | grep \"svm\"\n\n有输出内容就表示满足条件，否则进入bios更改虚拟化设置。然后安装kvm以及虚拟化所需相关软件包\n\n\tyum install -y kvm virt-* libvirts bridge-utils qemu-img\n\n* kvm：软件包中含有KVM内核模块，它在默认linux内核中提供kvm管理程序\n* libvirts：安装虚拟机管理工具，使用virsh等命令来管理和控制虚拟机\n* bridge-utils：设置网络网卡桥接\n* virt-*：创建、克隆虚拟机命令，使用qemu命令来创建磁盘等。\n* qemu-img：安装qemu组件，使用qemu命令来创建磁盘等。\n\n加载kvm模块\n\n\tmodprobe kvm-intel\n\n检查kvm模块是否被加载\n\n\tlsmod | grep kvm\n\n最好是重启再确认一次\n\n\treboot\n\n## 安装vncserver \n不是很确定服务器上是否有vnc server，检查一下，[参考链接](http://blog.163.com/likaifeng@126/blog/static/3209731020147614916768/)\n\t\n\tls /etc/sysconfig | grep \"vncservers\"\n返回为空，于是先安装\n\n\tsudo yum install tigervnc tigervnc-server -y\n简单配置一下\n\n\tsudo vim /etc/sysconfig/vncservers\n去掉注释并修改\n\n\tVNCSERVERS=\"2:node4\"\n\tVNCSERVERARGS[2]=\"-geometry 1024x768  -nolisten tcp -localhost\"\n然后配置一下当前用户的vnc登录密码\n\n\tvncpasswd\n\n验证两次，然后启动vnc服务\n\n\tvncserver &\n也可以设置其随系统启动\n\n\tchkconfig --level 5 vncserver on\n\tchkconfig --list | grep vnc\n\n这时候就可以使用vncviewer之类的客户端进行登录了，输入如下主机名:1即可（一般可以，但实际有其他情况）\n\n\tnode4:1\n## 准备centOS-6.7镜像，创建KVM虚拟机并启动\n（这里遇到了一个坑，用普通用户进行虚拟机创建的话，后面通过virsh edit为虚拟机配置网桥后启动会出现权限错误，而直接使用root来创建虚拟机，网桥字段会被自动配好，再无报错，所以就不要尝试普通用户+sudo往坑里跳了。）\n我们可以查看虚拟机列表，当然现在暂时没有任何虚拟机实例在运行\n\t\n\tvirsh list\n创建虚拟机硬盘文件，据说10GB可以了，不然后面使用费时费力\n\n\tkvm-img create -f raw PDME.img 10G\n很不幸，出现 kvm-img: command not found了。搜索后发现好像qemu-img也是一样的，这里注意一下，可以直接用-f指定为qcow2格式，还省去后面转换img了\n\n\tqemu-img create -f raw PDME.img 10G\n成功创建镜像，那么就可以使用centOS镜像将系统安装在这个创建的硬盘文件中了\n\t\n\tsudo kvm -m 512 -cdrom CentOS-6.7-x86_64-bin-DVD1.iso\\\n\t -drive file=PDME.img -boot d -net nic -net tap -nographic -vnc :0\n-vnc参数用于打开vnc访问，这样就可以通过其他机器登录到这个界面安装系统了，同时注意须加上-net nic -net tap才能建立镜像到kvm网桥virbr0的映射，网络才通。\n\n不过这时候依然出现了找不到kvm命令的提示，我觉得适可而止惹。查阅后发现是新版本系统会把命令藏起来，推荐使用新命令virtual-install/virsh进行操作，而把qemu-kvm转移到了不起眼的地方/usr/libexex，那么就自己链接过来使用吧\n\n\tsudo ln -sf /usr/libexec/qemu-kvm /usr/bin/kvm\n\n这好像还是和kvm-img没有关系。运行kvm创建虚拟机，报错如下\n\n\t/etc/qemu-ifup: could not launch network script\n\tkvm: -net tap: Device 'tap' could not be initialized\n### 尝试网桥配置\n似乎是网络方面的问题？搜了一下遇到这个问题的人还是不少，不过想起自己似乎略过了针对kvm进行网络方面的配置，这里补一下吧。\n虚拟机采用桥接方式，使其可以获得与物理机同样级别的IP，参考[这里](http://www.centoscn.com/image-text/config/2016/0218/6765.html)\n，另外还有[更详细的参考](http://blog.csdn.net/hzhsan/article/details/44098537/)，包括了NAT模式的介绍。\n下面我们为其配置网桥模式\n\n\tcd /etc/sysconfig/network-scripts\n\tsudo cp ifcfg-em1 ifcfg-br1\n编辑ifcfg-em1，添加内容\n\t\n\tBRIDGE=br1\n编辑ifcfg-br1,参考内容为\n\n\tDEVICE=br1\n\tTYPE=Bridge\n\tONBOOT=yes\n\tNM_CONTROLLED=yes\n\tBOOTPROTO=dhcp\n\n因为我们这里没用固定的网段分配，指定静态ip是不明智的，所以直接将IPADDR等相关项省略，对于NM_CONTROLLED字段，参考内容中说明RedHat系统需要设置为NO，而CentOS似乎没有特别需要注意的说法，就保持默认的yes好了。\n\n保存好后，重启network service\n\n\tsudo service NetworkManager stop\n\tsudo service network restart\n\tsudo service NetworkManager start\n可是呢，无论如何尝试，在ifcfg-em1中添加BRIDGE=br0之后，服务器就“断网”了。。\n于是尝试virt-install,可供参考的[内容](http://www.361way.com/virt-install/2721.html)，后来发现只要不恢复NetworkManager就好像没有问题，虽然ifconfig里em*一堆的error，[这里](https://www.chenyudong.com/archives/libvirt-kvm-bridge-network.html#i)也是这样，看来应该没有大碍吧。还有[这里](http://www.cnblogs.com/jankie/archive/2012/10/19/2730826.html)提到，确实需要关闭NetworkManager才可以使网桥正常运行。不过也有可能是地址变化了，所以连不上？似乎依然说不通。\n\n    virt-install -n PDMECENTOS \\\n    -r 512 -vcpus=1 \\\n    -c /home/node4/techbase/CentOS-6.7-x86_64-bin-DVD1.iso \\\n    --hvm --os-type=linux \\\n    --disk /home/node4/techbase/PDME.img \\\n    --graphics vnc,listen=0.0.0.0,port=7789 \\\n    --force --autostart\n好像是可以成功的，自动打开了一个VNC连接至创建的虚拟机实例，但是一直没动静，过了一会连接至物理服务器的VNC黑掉了，重新连接还是黑的并提示未加密链接。\n\n## 笑着活下去。记录一下常用virsh命令\n- virsh list #显示本地活动虚拟机\n- virsh list --all #显示本地所有的虚拟机（活动的+不活动的）\n- virsh define ubuntu.xml #通过配置文件定义一个虚拟机（这个虚拟机还不是活动的）\n- virsh start ubuntu #启动名字为ubuntu的非活动虚拟机\n- virsh create ubuntu.xml #创建虚拟机（创建后，虚拟机立即执行，成为活动主机）\n- virsh suspend ubuntu #暂停虚拟机\n- virsh resume ubuntu #启动暂停的虚拟机\n- virsh shutdown ubuntu #正常关闭虚拟机\n- virsh destroy ubuntu #强制关闭虚拟机\n- virsh undefine ubuntu #移除ubuntu虚拟机\n- virsh dumpxml ubuntu #显示虚拟机的当前配置文件（可能和定义虚拟机时的配置不同，因为当虚拟机启动时，需要给虚拟机分配id号、uuid、vnc端口号等等）\n- virsh setmem ubuntu 512000 #给不活动虚拟机设置内存大小\n- virsh setvcpus ubuntu 4 # 给不活动虚拟机设置cpu个数\n- 针对虚拟机操作\n- virsh domid win03_3 #查看虚拟机的标识符\n- virsh domname win03_2 #查看虚拟机的名称\n- virsh domuuid win03_2 #查看虚拟机的 UUID\n- virsh domstate win03_2 #查看虚拟机目前的状态\n- virsh dominfo win03_2 #查看虚拟机的信息\n- virsh console name #控制台进入指定虚拟机实例\n\n于是又经历了一次漫长的服务器重启，上面列出的virt-install命令是经过了一些修改后的样子，直接使用创建的img作为磁盘文件。当vncviewer启动并弹出之后，最好不要去动vnc窗口，这会造成安装过程中断。使用键盘在操作界面进行安装过程就可以啦。\n\n不过疑问还是有的，virt-install创建的虚拟机实例是如何配置所在ip及端口的呢？上面只是直接给vnc指定了一组参数。下面有进一步思考。\n进入安装好的系统之后，只有一个root用户，此时可以先创建一个普通用户并设置密码\n\n\tuseradd -d /home/student student\n\tpasswd student\n为了能够使该账户能够使用sudo，我们需要将其添加到sudo配置文件中去\n\n\tsu\n\tvisudo\n\t/ALL\n找到root ALL=(ALL) ALL，在下方添加\n\n\tstudent ALL=(ALL) ALL\n退出并保存，完成。\n\n## 配置virt vnc连接\n上面提到了一个vnc连接kvm虚拟机的参数配置问题，这下也不得不面对一下了，因为很开心地设置好用户之后将虚拟机示例shutdown，然后现在重新启动之后不知道怎么再用vnc连接了，\n\n\tvncviewer 0.0.0.0:1\n\n对了，记录一个Mac上好用的VNC，[chicken of vnc](https://sourceforge.net/projects/cotvnc/),恩主要是因为免费，图标简直太可爱。当然功能也是简单够用的，但是注意最好不要在建立连对就是下面的命令不起作用，输密码验证错误，我输的默认密码。。接的时候选全屏模式，会抽风。\n那么接着尝试解决vnc连不上虚拟机的问题，尝试如下方法\n\n\tvirsh console PDMECENTOS\n结果是卡住不动了，搜索之后找到了[类似问题](http://www.linuxidc.com/Linux/2014-10/107891.htm)，可是人家是vnc能连上虚拟机的情况啊。。。\n\n然后事情出现了转机，查看[这里](http://blog.csdn.net/taiyang1987912/article/details/50474219)，前面配置虚拟主机vnc没啥好说的，默认就是那样，注意后面\n\n\tvirsh edit PDMECENTOS\n将端口值改为-1，之前被我照着另一个很像的教程改成了5910，最原本的默认值不记得了，嗯这里应该就可以配置和vnc相关的参数了，改好之后启动虚拟机，查看qemu-kvm运行的端口，不要使用：1，感觉这个需要虚拟机配置vncserver后进行验证才可用，通过进程端口直接连接显然更佳。（这里理解不是很到位，后面还是有进一步思考）\n\n\tnetstat -tunlp\n记得把终端全屏才能看见进程信息列，然后前面的ip:port就是vncviewer登陆所使用的参数啦。这个时候虚拟机并没有图形界面,我们可以安装一下\n\t\n\tyum -y groupinstall Desktop\n\tyum -y groupinstall \"X Window System\"\n安装完成后就可以启动图形界面了\n\n\tstartx\n添加中文支持\n\n\tyum -y groupinstall chinese-support\n\n设置开机自动进入图形界面\n\n\tvim /etc/inittab\n将id:x:initdefautl中的x改成5即可\n\t\n## 配置virt虚拟客户机桥接上网\n[参考内容](https://www.chenyudong.com/archives/libvirt-kvm-bridge-network.html#i)\n\n\tvirsh edit PDMECENTOS\n添加内容\n\n\t<interface type=\"bridge\"> <!--虚拟机网络连接方式-->\n\t<source bridge=\"br0\" /> <!-- 当前主机网桥的名称-->\n\t<mac address=\"00:16:e4:9a:b3:6a\" /> <!--为虚拟机分配mac地址，务必唯一，否则dhcp获得同样ip,引起冲突，而我是从已经创建好的虚拟机里面抄的，后来发现这样做十分正确-->\n\t</interface>\n然后启动网卡，我们可以设置其随开机启动\n\n\tifconfig eth0 up\n\tvim /etc/sysconfig/network-scripts/ifcfg-eth0 #置ONBOOT=true\n\t\n\t这个时候运行ifconfig就可以看到eth0的信息啦，然而没有卵用，最后发现安装虚拟机应该还是需要root，否则重启虚拟机的时候tap vnet会有权限错误\n很奇怪重启服务器后执行命令会遇到locale unsupport错误，可以这么解决，虽然只是当时生效，重启后就恢复原样了。\n\n\texport LC_ALL=C\n后来发现是mac上的终端有问题，进入其配置面板，去掉Adcanced选项卡中set locale ...项前面的对勾就可以了。另外是修改系统语言的方法，比较推荐使用。\n\t\n\tvim /etc/profile\n\t/export #找到export xx xx xxx语句，在前增加一行LANG=\"zh_CN.UTF-8\",在后追加LANG\n然后重启系统即可生效。\n\t\t\t\n然后virt-install出现了无法启动vnc显示的问题，又照上面修改了虚拟机的监听端口为-1，然后再用vncviewer重连就好了（改之前重连也会无法启动显示），再然后直接安装又能启动vnc显示了，我晕，完全不懂怎么好的。对了，root用户就不要在普通用户目录里安装了，会有蜜汁文件权限问题。。\n\t\n最后只得注意的是对虚拟机配置的变更很可能要重启后才生效，不管什么情况，试一试最好，我这里的网桥配置就是删除libvirt自带的nat虚拟网桥再重启虚拟机就生效了。嗯不要使用普通用户运行virsh，很坑。另一个例子，我们进入图形界面后，可以给右键菜单添加打开终端的选项，也需要重启系统\n\n\tsudo apt-get install nautilus-open-terminal #ubuntu\n\tsudo yum install nautilus-open-terminal #centos\n另外virsh shutdown命令需要对虚拟机进行[一定配置](http://www.bubuko.com/infodetail-771662.html)才可用。\n\n## vnc直接连接kvm问题与进程监听地址端口的思考\n虚拟机终于是运行起来了，配置也到了一定程度，可以比较方便地使用了，但是出现了一个很奇怪的现象，直接在本地机器通过vnc连接虚拟机总是出现拒绝连接的提示，此时虚拟机中vncserver随系统启动，处于运行状态，可以输入如下命令查看\n\n\tservice vncserver status\n同时也排除了防火墙开放端口的问题，依然没有进展。虽然用shell连接是正常的，但还是很不甘心。\n\n然后就很无聊的了解了一下netstat里面出现的进程监听地址和端口，唉计网本来就没怎么学好，考完研后丢的也差不多了。首先是这个\n\n\t127.0.0.1\n\t\n了解了一下，表示本机，另一个代称就是我们很熟悉的localhost，更神奇的是127.x.x.x其实都是一样的。如果一个进程监听这个ip，那就表示它实际上只能监听到本地的程序并作出回应。\n\n另外就是\n\n\t0.0.0.0\n这个可不得了，表示一切ip，本机不认识的任何地址都可以归到这个地址里，监听这个地址的进程，当然机会对所有地址对应端口的通信作出反应啦。了解了这个，我们来看一下虚拟主机，虚拟机相应的vnc进程监听情况，也就是这会一个比较关键的命令的输出\n\n\tnetstat -tunlp\n\n首先是虚拟主机，当前得到的输出为\n\n|Proto |Recv-Q |Send-Q |Local Address |Foreign Address |State| PID/Program name|\n|---|---|---|---|---|---|---|   \ntcp|        0|      0| 0.0.0.0:60989|               0.0.0.0:*|LISTEN|1892/rpc.statd|\n|tcp|0|0| 0.0.0.0:5900|0.0.0.0:*|LISTEN|4012/qemu-kvm|       \n|tcp|0|0| 0.0.0.0:5901|0.0.0.0:*|LISTEN|2848/Xvnc\n|tcp|0|0| 127.0.0.1:5902|0.0.0.0:*|LISTEN|2275/Xvnc|\n用markdown画表格真是累人。我们看到qemu-kvm监听了所有内网ip的5900，也就是说只要vncviewer向5900端口发出连接请求，虚拟机进程就会响应，那么我们要如何访问呢？\n1.在虚拟主机上，使用\n\t\n\tvncviewer localhost:5900\n因为这个虚拟机进程是在虚拟主机上运行的，用本机ip定位就可以了。再看下一个，2848/Xvnc，监听了所有内网ip的5901端口，这个是虚拟主机的vncserver进程，验证方法是输入\n\n\tservice vncserver status\n进行验证，执行后会输出一样的PID，那么对于其他内网主机，使用如下命令即可通过vnc连接虚拟主机\n\n\tvncviewer node4:5901\n看再下一项，注意其监听ip是127.0.0.1，这说明他只会相应本机进程，其他内网机器无法与其成功建立连接。\n另外，vnc有自己的一套映射规则，默认从5900端口开始，vncviewer所接受参数中端口可用0替换，并递增对应，也就是说，如果此时通过内网机器远程虚拟主机，会有如下对应关系及情况\n\n\tvncviewer node4:0 #实际远程到了虚拟主机上的5900监听虚拟机示例进程\n\tvncviewer node4:1 #连接到虚拟主机的5901，vncserver进程\n\tvncviewer node4:2 #虚拟主机本机ip监听端口，无法连接\n\t\n基于这些，我们来看一下虚拟机中的情况。先简单做一下“故障排除”,将Xvnc进程杀掉，此时查看vncserver情况，提示\n\n\tXvnc 已死，但是 subsys 被锁\n\t\n呵呵。\n那么执行以下命令删除锁吧\n\n\trm -rf /var/lock/subsys/Xvnc\n然后将~/.vnc/下的.log以及.pid删除。重启虚拟机，让配置的vncserver服务自动启动，再查看进程监听情况\n这里，并没有发现vncserver自动启动，于是输入\n\n\tvncserver\n反馈信息为\n\n\tYou will require a password to access your desktops.\n\n\tPassword:\n\tVerify:\n\t\n\tNew 'localhost.localdomain:1 (student)' desktop is localhost.localdomain:1\n\t\n\tCreating default startup script /home/student/.vnc/xstartup\n\tStarting applications specified in /home/student/.vnc/xstartup\n\tLog file is /home/student/.vnc/localhost.localdomain:1.log\n\t\n看起来还挺正常了，不小心又起了一次，于是出现了localhost.localdomain:2。。好的此查看进程占用情况(只取到需要看的那一行)\n\n|Proto |Recv-Q |Send-Q |LocalAddress|Foreign Address|State|PID/Program name|\n|---|---|---|---|---|---|---|   \n|tcp|0|0| 0.0.0.0:5901|0.0.0.0:*|LISTEN|2003/Xvnc|           \n|tcp|0|0| 0.0.0.0:5902|0.0.0.0:*|LISTEN|2369/Xvnc|\n刚才明明还发现Xvnc监听的都是本地ip，但是测试后依然不能使用内网机器进行vnc远程，错误信息完全没有改变。先将其关闭\n\n\tvncserver -kill :1\n\tvncserver -kill :2\n检查开放端口，没有异常，还是修改后的样子，开放了5901和5902,重新为当前用户设置密码，然后再检查自动启动配置，确认无误后重启虚拟机系统，发现vncserver自动启动了，可是监听ip又是之前的127.0.0.1，处于其他机器无法连接的状态，呵呵。这时自己再起一个vncserver则会监听所有ip，可是依然连不上。\n\n\n\t\n\t\n\t\n\n\t\n\t\n\n","source":"_posts/Use-KVM-to-customize-an-mirror-for-openstack.md","raw":"---\ntitle: Use Kvm to customize an mirror for openstack\ndate: 2016-11-03 10:15:31\ntags: [Linux, KVM, openstack]\ncategories: [trials]\n---\n\n# 在linux上使用kvm，qemu，vnc等工具进行虚拟机定制以及qcow2镜像的生成\n由于，这里有一个基于openstack的教学项目，所以，真的要把这个镜像做出来了，不然月底要完蛋。\n服务器上应该是已经安装好了kvm相关环境，但是学弟遇到了一些问题一直没有解决，今天我自己看一看吧。用服务器来做总比用虚拟机强。\n\n## 基础环境检查与简单配置\n[参考内容1](http://www.111cn.net/sys/CentOS/87211.htm)\n[参考内容2](http://www.vpsee.com/2012/02/create-centos-kvm-image-for-openstack-nova/)\nIntel cpu\n\n\tcat /proc/cpuinfo | grep \"vmx\"\nAMD cpu\n\n\tcat /proc/cpuinfo | grep \"svm\"\n\n有输出内容就表示满足条件，否则进入bios更改虚拟化设置。然后安装kvm以及虚拟化所需相关软件包\n\n\tyum install -y kvm virt-* libvirts bridge-utils qemu-img\n\n* kvm：软件包中含有KVM内核模块，它在默认linux内核中提供kvm管理程序\n* libvirts：安装虚拟机管理工具，使用virsh等命令来管理和控制虚拟机\n* bridge-utils：设置网络网卡桥接\n* virt-*：创建、克隆虚拟机命令，使用qemu命令来创建磁盘等。\n* qemu-img：安装qemu组件，使用qemu命令来创建磁盘等。\n\n加载kvm模块\n\n\tmodprobe kvm-intel\n\n检查kvm模块是否被加载\n\n\tlsmod | grep kvm\n\n最好是重启再确认一次\n\n\treboot\n\n## 安装vncserver \n不是很确定服务器上是否有vnc server，检查一下，[参考链接](http://blog.163.com/likaifeng@126/blog/static/3209731020147614916768/)\n\t\n\tls /etc/sysconfig | grep \"vncservers\"\n返回为空，于是先安装\n\n\tsudo yum install tigervnc tigervnc-server -y\n简单配置一下\n\n\tsudo vim /etc/sysconfig/vncservers\n去掉注释并修改\n\n\tVNCSERVERS=\"2:node4\"\n\tVNCSERVERARGS[2]=\"-geometry 1024x768  -nolisten tcp -localhost\"\n然后配置一下当前用户的vnc登录密码\n\n\tvncpasswd\n\n验证两次，然后启动vnc服务\n\n\tvncserver &\n也可以设置其随系统启动\n\n\tchkconfig --level 5 vncserver on\n\tchkconfig --list | grep vnc\n\n这时候就可以使用vncviewer之类的客户端进行登录了，输入如下主机名:1即可（一般可以，但实际有其他情况）\n\n\tnode4:1\n## 准备centOS-6.7镜像，创建KVM虚拟机并启动\n（这里遇到了一个坑，用普通用户进行虚拟机创建的话，后面通过virsh edit为虚拟机配置网桥后启动会出现权限错误，而直接使用root来创建虚拟机，网桥字段会被自动配好，再无报错，所以就不要尝试普通用户+sudo往坑里跳了。）\n我们可以查看虚拟机列表，当然现在暂时没有任何虚拟机实例在运行\n\t\n\tvirsh list\n创建虚拟机硬盘文件，据说10GB可以了，不然后面使用费时费力\n\n\tkvm-img create -f raw PDME.img 10G\n很不幸，出现 kvm-img: command not found了。搜索后发现好像qemu-img也是一样的，这里注意一下，可以直接用-f指定为qcow2格式，还省去后面转换img了\n\n\tqemu-img create -f raw PDME.img 10G\n成功创建镜像，那么就可以使用centOS镜像将系统安装在这个创建的硬盘文件中了\n\t\n\tsudo kvm -m 512 -cdrom CentOS-6.7-x86_64-bin-DVD1.iso\\\n\t -drive file=PDME.img -boot d -net nic -net tap -nographic -vnc :0\n-vnc参数用于打开vnc访问，这样就可以通过其他机器登录到这个界面安装系统了，同时注意须加上-net nic -net tap才能建立镜像到kvm网桥virbr0的映射，网络才通。\n\n不过这时候依然出现了找不到kvm命令的提示，我觉得适可而止惹。查阅后发现是新版本系统会把命令藏起来，推荐使用新命令virtual-install/virsh进行操作，而把qemu-kvm转移到了不起眼的地方/usr/libexex，那么就自己链接过来使用吧\n\n\tsudo ln -sf /usr/libexec/qemu-kvm /usr/bin/kvm\n\n这好像还是和kvm-img没有关系。运行kvm创建虚拟机，报错如下\n\n\t/etc/qemu-ifup: could not launch network script\n\tkvm: -net tap: Device 'tap' could not be initialized\n### 尝试网桥配置\n似乎是网络方面的问题？搜了一下遇到这个问题的人还是不少，不过想起自己似乎略过了针对kvm进行网络方面的配置，这里补一下吧。\n虚拟机采用桥接方式，使其可以获得与物理机同样级别的IP，参考[这里](http://www.centoscn.com/image-text/config/2016/0218/6765.html)\n，另外还有[更详细的参考](http://blog.csdn.net/hzhsan/article/details/44098537/)，包括了NAT模式的介绍。\n下面我们为其配置网桥模式\n\n\tcd /etc/sysconfig/network-scripts\n\tsudo cp ifcfg-em1 ifcfg-br1\n编辑ifcfg-em1，添加内容\n\t\n\tBRIDGE=br1\n编辑ifcfg-br1,参考内容为\n\n\tDEVICE=br1\n\tTYPE=Bridge\n\tONBOOT=yes\n\tNM_CONTROLLED=yes\n\tBOOTPROTO=dhcp\n\n因为我们这里没用固定的网段分配，指定静态ip是不明智的，所以直接将IPADDR等相关项省略，对于NM_CONTROLLED字段，参考内容中说明RedHat系统需要设置为NO，而CentOS似乎没有特别需要注意的说法，就保持默认的yes好了。\n\n保存好后，重启network service\n\n\tsudo service NetworkManager stop\n\tsudo service network restart\n\tsudo service NetworkManager start\n可是呢，无论如何尝试，在ifcfg-em1中添加BRIDGE=br0之后，服务器就“断网”了。。\n于是尝试virt-install,可供参考的[内容](http://www.361way.com/virt-install/2721.html)，后来发现只要不恢复NetworkManager就好像没有问题，虽然ifconfig里em*一堆的error，[这里](https://www.chenyudong.com/archives/libvirt-kvm-bridge-network.html#i)也是这样，看来应该没有大碍吧。还有[这里](http://www.cnblogs.com/jankie/archive/2012/10/19/2730826.html)提到，确实需要关闭NetworkManager才可以使网桥正常运行。不过也有可能是地址变化了，所以连不上？似乎依然说不通。\n\n    virt-install -n PDMECENTOS \\\n    -r 512 -vcpus=1 \\\n    -c /home/node4/techbase/CentOS-6.7-x86_64-bin-DVD1.iso \\\n    --hvm --os-type=linux \\\n    --disk /home/node4/techbase/PDME.img \\\n    --graphics vnc,listen=0.0.0.0,port=7789 \\\n    --force --autostart\n好像是可以成功的，自动打开了一个VNC连接至创建的虚拟机实例，但是一直没动静，过了一会连接至物理服务器的VNC黑掉了，重新连接还是黑的并提示未加密链接。\n\n## 笑着活下去。记录一下常用virsh命令\n- virsh list #显示本地活动虚拟机\n- virsh list --all #显示本地所有的虚拟机（活动的+不活动的）\n- virsh define ubuntu.xml #通过配置文件定义一个虚拟机（这个虚拟机还不是活动的）\n- virsh start ubuntu #启动名字为ubuntu的非活动虚拟机\n- virsh create ubuntu.xml #创建虚拟机（创建后，虚拟机立即执行，成为活动主机）\n- virsh suspend ubuntu #暂停虚拟机\n- virsh resume ubuntu #启动暂停的虚拟机\n- virsh shutdown ubuntu #正常关闭虚拟机\n- virsh destroy ubuntu #强制关闭虚拟机\n- virsh undefine ubuntu #移除ubuntu虚拟机\n- virsh dumpxml ubuntu #显示虚拟机的当前配置文件（可能和定义虚拟机时的配置不同，因为当虚拟机启动时，需要给虚拟机分配id号、uuid、vnc端口号等等）\n- virsh setmem ubuntu 512000 #给不活动虚拟机设置内存大小\n- virsh setvcpus ubuntu 4 # 给不活动虚拟机设置cpu个数\n- 针对虚拟机操作\n- virsh domid win03_3 #查看虚拟机的标识符\n- virsh domname win03_2 #查看虚拟机的名称\n- virsh domuuid win03_2 #查看虚拟机的 UUID\n- virsh domstate win03_2 #查看虚拟机目前的状态\n- virsh dominfo win03_2 #查看虚拟机的信息\n- virsh console name #控制台进入指定虚拟机实例\n\n于是又经历了一次漫长的服务器重启，上面列出的virt-install命令是经过了一些修改后的样子，直接使用创建的img作为磁盘文件。当vncviewer启动并弹出之后，最好不要去动vnc窗口，这会造成安装过程中断。使用键盘在操作界面进行安装过程就可以啦。\n\n不过疑问还是有的，virt-install创建的虚拟机实例是如何配置所在ip及端口的呢？上面只是直接给vnc指定了一组参数。下面有进一步思考。\n进入安装好的系统之后，只有一个root用户，此时可以先创建一个普通用户并设置密码\n\n\tuseradd -d /home/student student\n\tpasswd student\n为了能够使该账户能够使用sudo，我们需要将其添加到sudo配置文件中去\n\n\tsu\n\tvisudo\n\t/ALL\n找到root ALL=(ALL) ALL，在下方添加\n\n\tstudent ALL=(ALL) ALL\n退出并保存，完成。\n\n## 配置virt vnc连接\n上面提到了一个vnc连接kvm虚拟机的参数配置问题，这下也不得不面对一下了，因为很开心地设置好用户之后将虚拟机示例shutdown，然后现在重新启动之后不知道怎么再用vnc连接了，\n\n\tvncviewer 0.0.0.0:1\n\n对了，记录一个Mac上好用的VNC，[chicken of vnc](https://sourceforge.net/projects/cotvnc/),恩主要是因为免费，图标简直太可爱。当然功能也是简单够用的，但是注意最好不要在建立连对就是下面的命令不起作用，输密码验证错误，我输的默认密码。。接的时候选全屏模式，会抽风。\n那么接着尝试解决vnc连不上虚拟机的问题，尝试如下方法\n\n\tvirsh console PDMECENTOS\n结果是卡住不动了，搜索之后找到了[类似问题](http://www.linuxidc.com/Linux/2014-10/107891.htm)，可是人家是vnc能连上虚拟机的情况啊。。。\n\n然后事情出现了转机，查看[这里](http://blog.csdn.net/taiyang1987912/article/details/50474219)，前面配置虚拟主机vnc没啥好说的，默认就是那样，注意后面\n\n\tvirsh edit PDMECENTOS\n将端口值改为-1，之前被我照着另一个很像的教程改成了5910，最原本的默认值不记得了，嗯这里应该就可以配置和vnc相关的参数了，改好之后启动虚拟机，查看qemu-kvm运行的端口，不要使用：1，感觉这个需要虚拟机配置vncserver后进行验证才可用，通过进程端口直接连接显然更佳。（这里理解不是很到位，后面还是有进一步思考）\n\n\tnetstat -tunlp\n记得把终端全屏才能看见进程信息列，然后前面的ip:port就是vncviewer登陆所使用的参数啦。这个时候虚拟机并没有图形界面,我们可以安装一下\n\t\n\tyum -y groupinstall Desktop\n\tyum -y groupinstall \"X Window System\"\n安装完成后就可以启动图形界面了\n\n\tstartx\n添加中文支持\n\n\tyum -y groupinstall chinese-support\n\n设置开机自动进入图形界面\n\n\tvim /etc/inittab\n将id:x:initdefautl中的x改成5即可\n\t\n## 配置virt虚拟客户机桥接上网\n[参考内容](https://www.chenyudong.com/archives/libvirt-kvm-bridge-network.html#i)\n\n\tvirsh edit PDMECENTOS\n添加内容\n\n\t<interface type=\"bridge\"> <!--虚拟机网络连接方式-->\n\t<source bridge=\"br0\" /> <!-- 当前主机网桥的名称-->\n\t<mac address=\"00:16:e4:9a:b3:6a\" /> <!--为虚拟机分配mac地址，务必唯一，否则dhcp获得同样ip,引起冲突，而我是从已经创建好的虚拟机里面抄的，后来发现这样做十分正确-->\n\t</interface>\n然后启动网卡，我们可以设置其随开机启动\n\n\tifconfig eth0 up\n\tvim /etc/sysconfig/network-scripts/ifcfg-eth0 #置ONBOOT=true\n\t\n\t这个时候运行ifconfig就可以看到eth0的信息啦，然而没有卵用，最后发现安装虚拟机应该还是需要root，否则重启虚拟机的时候tap vnet会有权限错误\n很奇怪重启服务器后执行命令会遇到locale unsupport错误，可以这么解决，虽然只是当时生效，重启后就恢复原样了。\n\n\texport LC_ALL=C\n后来发现是mac上的终端有问题，进入其配置面板，去掉Adcanced选项卡中set locale ...项前面的对勾就可以了。另外是修改系统语言的方法，比较推荐使用。\n\t\n\tvim /etc/profile\n\t/export #找到export xx xx xxx语句，在前增加一行LANG=\"zh_CN.UTF-8\",在后追加LANG\n然后重启系统即可生效。\n\t\t\t\n然后virt-install出现了无法启动vnc显示的问题，又照上面修改了虚拟机的监听端口为-1，然后再用vncviewer重连就好了（改之前重连也会无法启动显示），再然后直接安装又能启动vnc显示了，我晕，完全不懂怎么好的。对了，root用户就不要在普通用户目录里安装了，会有蜜汁文件权限问题。。\n\t\n最后只得注意的是对虚拟机配置的变更很可能要重启后才生效，不管什么情况，试一试最好，我这里的网桥配置就是删除libvirt自带的nat虚拟网桥再重启虚拟机就生效了。嗯不要使用普通用户运行virsh，很坑。另一个例子，我们进入图形界面后，可以给右键菜单添加打开终端的选项，也需要重启系统\n\n\tsudo apt-get install nautilus-open-terminal #ubuntu\n\tsudo yum install nautilus-open-terminal #centos\n另外virsh shutdown命令需要对虚拟机进行[一定配置](http://www.bubuko.com/infodetail-771662.html)才可用。\n\n## vnc直接连接kvm问题与进程监听地址端口的思考\n虚拟机终于是运行起来了，配置也到了一定程度，可以比较方便地使用了，但是出现了一个很奇怪的现象，直接在本地机器通过vnc连接虚拟机总是出现拒绝连接的提示，此时虚拟机中vncserver随系统启动，处于运行状态，可以输入如下命令查看\n\n\tservice vncserver status\n同时也排除了防火墙开放端口的问题，依然没有进展。虽然用shell连接是正常的，但还是很不甘心。\n\n然后就很无聊的了解了一下netstat里面出现的进程监听地址和端口，唉计网本来就没怎么学好，考完研后丢的也差不多了。首先是这个\n\n\t127.0.0.1\n\t\n了解了一下，表示本机，另一个代称就是我们很熟悉的localhost，更神奇的是127.x.x.x其实都是一样的。如果一个进程监听这个ip，那就表示它实际上只能监听到本地的程序并作出回应。\n\n另外就是\n\n\t0.0.0.0\n这个可不得了，表示一切ip，本机不认识的任何地址都可以归到这个地址里，监听这个地址的进程，当然机会对所有地址对应端口的通信作出反应啦。了解了这个，我们来看一下虚拟主机，虚拟机相应的vnc进程监听情况，也就是这会一个比较关键的命令的输出\n\n\tnetstat -tunlp\n\n首先是虚拟主机，当前得到的输出为\n\n|Proto |Recv-Q |Send-Q |Local Address |Foreign Address |State| PID/Program name|\n|---|---|---|---|---|---|---|   \ntcp|        0|      0| 0.0.0.0:60989|               0.0.0.0:*|LISTEN|1892/rpc.statd|\n|tcp|0|0| 0.0.0.0:5900|0.0.0.0:*|LISTEN|4012/qemu-kvm|       \n|tcp|0|0| 0.0.0.0:5901|0.0.0.0:*|LISTEN|2848/Xvnc\n|tcp|0|0| 127.0.0.1:5902|0.0.0.0:*|LISTEN|2275/Xvnc|\n用markdown画表格真是累人。我们看到qemu-kvm监听了所有内网ip的5900，也就是说只要vncviewer向5900端口发出连接请求，虚拟机进程就会响应，那么我们要如何访问呢？\n1.在虚拟主机上，使用\n\t\n\tvncviewer localhost:5900\n因为这个虚拟机进程是在虚拟主机上运行的，用本机ip定位就可以了。再看下一个，2848/Xvnc，监听了所有内网ip的5901端口，这个是虚拟主机的vncserver进程，验证方法是输入\n\n\tservice vncserver status\n进行验证，执行后会输出一样的PID，那么对于其他内网主机，使用如下命令即可通过vnc连接虚拟主机\n\n\tvncviewer node4:5901\n看再下一项，注意其监听ip是127.0.0.1，这说明他只会相应本机进程，其他内网机器无法与其成功建立连接。\n另外，vnc有自己的一套映射规则，默认从5900端口开始，vncviewer所接受参数中端口可用0替换，并递增对应，也就是说，如果此时通过内网机器远程虚拟主机，会有如下对应关系及情况\n\n\tvncviewer node4:0 #实际远程到了虚拟主机上的5900监听虚拟机示例进程\n\tvncviewer node4:1 #连接到虚拟主机的5901，vncserver进程\n\tvncviewer node4:2 #虚拟主机本机ip监听端口，无法连接\n\t\n基于这些，我们来看一下虚拟机中的情况。先简单做一下“故障排除”,将Xvnc进程杀掉，此时查看vncserver情况，提示\n\n\tXvnc 已死，但是 subsys 被锁\n\t\n呵呵。\n那么执行以下命令删除锁吧\n\n\trm -rf /var/lock/subsys/Xvnc\n然后将~/.vnc/下的.log以及.pid删除。重启虚拟机，让配置的vncserver服务自动启动，再查看进程监听情况\n这里，并没有发现vncserver自动启动，于是输入\n\n\tvncserver\n反馈信息为\n\n\tYou will require a password to access your desktops.\n\n\tPassword:\n\tVerify:\n\t\n\tNew 'localhost.localdomain:1 (student)' desktop is localhost.localdomain:1\n\t\n\tCreating default startup script /home/student/.vnc/xstartup\n\tStarting applications specified in /home/student/.vnc/xstartup\n\tLog file is /home/student/.vnc/localhost.localdomain:1.log\n\t\n看起来还挺正常了，不小心又起了一次，于是出现了localhost.localdomain:2。。好的此查看进程占用情况(只取到需要看的那一行)\n\n|Proto |Recv-Q |Send-Q |LocalAddress|Foreign Address|State|PID/Program name|\n|---|---|---|---|---|---|---|   \n|tcp|0|0| 0.0.0.0:5901|0.0.0.0:*|LISTEN|2003/Xvnc|           \n|tcp|0|0| 0.0.0.0:5902|0.0.0.0:*|LISTEN|2369/Xvnc|\n刚才明明还发现Xvnc监听的都是本地ip，但是测试后依然不能使用内网机器进行vnc远程，错误信息完全没有改变。先将其关闭\n\n\tvncserver -kill :1\n\tvncserver -kill :2\n检查开放端口，没有异常，还是修改后的样子，开放了5901和5902,重新为当前用户设置密码，然后再检查自动启动配置，确认无误后重启虚拟机系统，发现vncserver自动启动了，可是监听ip又是之前的127.0.0.1，处于其他机器无法连接的状态，呵呵。这时自己再起一个vncserver则会监听所有ip，可是依然连不上。\n\n\n\t\n\t\n\t\n\n\t\n\t\n\n","slug":"Use-KVM-to-customize-an-mirror-for-openstack","published":1,"updated":"2016-11-04T15:28:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ3y1qrs00066w22notuvn9h","content":"<h1 id=\"在linux上使用kvm，qemu，vnc等工具进行虚拟机定制以及qcow2镜像的生成\"><a href=\"#在linux上使用kvm，qemu，vnc等工具进行虚拟机定制以及qcow2镜像的生成\" class=\"headerlink\" title=\"在linux上使用kvm，qemu，vnc等工具进行虚拟机定制以及qcow2镜像的生成\"></a>在linux上使用kvm，qemu，vnc等工具进行虚拟机定制以及qcow2镜像的生成</h1><p>由于，这里有一个基于openstack的教学项目，所以，真的要把这个镜像做出来了，不然月底要完蛋。<br>服务器上应该是已经安装好了kvm相关环境，但是学弟遇到了一些问题一直没有解决，今天我自己看一看吧。用服务器来做总比用虚拟机强。</p>\n<h2 id=\"基础环境检查与简单配置\"><a href=\"#基础环境检查与简单配置\" class=\"headerlink\" title=\"基础环境检查与简单配置\"></a>基础环境检查与简单配置</h2><p><a href=\"http://www.111cn.net/sys/CentOS/87211.htm\" target=\"_blank\" rel=\"external\">参考内容1</a><br><a href=\"http://www.vpsee.com/2012/02/create-centos-kvm-image-for-openstack-nova/\" target=\"_blank\" rel=\"external\">参考内容2</a><br>Intel cpu</p>\n<pre><code>cat /proc/cpuinfo | grep &quot;vmx&quot;\n</code></pre><p>AMD cpu</p>\n<pre><code>cat /proc/cpuinfo | grep &quot;svm&quot;\n</code></pre><p>有输出内容就表示满足条件，否则进入bios更改虚拟化设置。然后安装kvm以及虚拟化所需相关软件包</p>\n<pre><code>yum install -y kvm virt-* libvirts bridge-utils qemu-img\n</code></pre><ul>\n<li>kvm：软件包中含有KVM内核模块，它在默认linux内核中提供kvm管理程序</li>\n<li>libvirts：安装虚拟机管理工具，使用virsh等命令来管理和控制虚拟机</li>\n<li>bridge-utils：设置网络网卡桥接</li>\n<li>virt-*：创建、克隆虚拟机命令，使用qemu命令来创建磁盘等。</li>\n<li>qemu-img：安装qemu组件，使用qemu命令来创建磁盘等。</li>\n</ul>\n<p>加载kvm模块</p>\n<pre><code>modprobe kvm-intel\n</code></pre><p>检查kvm模块是否被加载</p>\n<pre><code>lsmod | grep kvm\n</code></pre><p>最好是重启再确认一次</p>\n<pre><code>reboot\n</code></pre><h2 id=\"安装vncserver\"><a href=\"#安装vncserver\" class=\"headerlink\" title=\"安装vncserver\"></a>安装vncserver</h2><p>不是很确定服务器上是否有vnc server，检查一下，<a href=\"http://blog.163.com/likaifeng@126/blog/static/3209731020147614916768/\" target=\"_blank\" rel=\"external\">参考链接</a></p>\n<pre><code>ls /etc/sysconfig | grep &quot;vncservers&quot;\n</code></pre><p>返回为空，于是先安装</p>\n<pre><code>sudo yum install tigervnc tigervnc-server -y\n</code></pre><p>简单配置一下</p>\n<pre><code>sudo vim /etc/sysconfig/vncservers\n</code></pre><p>去掉注释并修改</p>\n<pre><code>VNCSERVERS=&quot;2:node4&quot;\nVNCSERVERARGS[2]=&quot;-geometry 1024x768  -nolisten tcp -localhost&quot;\n</code></pre><p>然后配置一下当前用户的vnc登录密码</p>\n<pre><code>vncpasswd\n</code></pre><p>验证两次，然后启动vnc服务</p>\n<pre><code>vncserver &amp;\n</code></pre><p>也可以设置其随系统启动</p>\n<pre><code>chkconfig --level 5 vncserver on\nchkconfig --list | grep vnc\n</code></pre><p>这时候就可以使用vncviewer之类的客户端进行登录了，输入如下主机名:1即可（一般可以，但实际有其他情况）</p>\n<pre><code>node4:1\n</code></pre><h2 id=\"准备centOS-6-7镜像，创建KVM虚拟机并启动\"><a href=\"#准备centOS-6-7镜像，创建KVM虚拟机并启动\" class=\"headerlink\" title=\"准备centOS-6.7镜像，创建KVM虚拟机并启动\"></a>准备centOS-6.7镜像，创建KVM虚拟机并启动</h2><p>（这里遇到了一个坑，用普通用户进行虚拟机创建的话，后面通过virsh edit为虚拟机配置网桥后启动会出现权限错误，而直接使用root来创建虚拟机，网桥字段会被自动配好，再无报错，所以就不要尝试普通用户+sudo往坑里跳了。）<br>我们可以查看虚拟机列表，当然现在暂时没有任何虚拟机实例在运行</p>\n<pre><code>virsh list\n</code></pre><p>创建虚拟机硬盘文件，据说10GB可以了，不然后面使用费时费力</p>\n<pre><code>kvm-img create -f raw PDME.img 10G\n</code></pre><p>很不幸，出现 kvm-img: command not found了。搜索后发现好像qemu-img也是一样的，这里注意一下，可以直接用-f指定为qcow2格式，还省去后面转换img了</p>\n<pre><code>qemu-img create -f raw PDME.img 10G\n</code></pre><p>成功创建镜像，那么就可以使用centOS镜像将系统安装在这个创建的硬盘文件中了</p>\n<pre><code>sudo kvm -m 512 -cdrom CentOS-6.7-x86_64-bin-DVD1.iso\\\n -drive file=PDME.img -boot d -net nic -net tap -nographic -vnc :0\n</code></pre><p>-vnc参数用于打开vnc访问，这样就可以通过其他机器登录到这个界面安装系统了，同时注意须加上-net nic -net tap才能建立镜像到kvm网桥virbr0的映射，网络才通。</p>\n<p>不过这时候依然出现了找不到kvm命令的提示，我觉得适可而止惹。查阅后发现是新版本系统会把命令藏起来，推荐使用新命令virtual-install/virsh进行操作，而把qemu-kvm转移到了不起眼的地方/usr/libexex，那么就自己链接过来使用吧</p>\n<pre><code>sudo ln -sf /usr/libexec/qemu-kvm /usr/bin/kvm\n</code></pre><p>这好像还是和kvm-img没有关系。运行kvm创建虚拟机，报错如下</p>\n<pre><code>/etc/qemu-ifup: could not launch network script\nkvm: -net tap: Device &apos;tap&apos; could not be initialized\n</code></pre><h3 id=\"尝试网桥配置\"><a href=\"#尝试网桥配置\" class=\"headerlink\" title=\"尝试网桥配置\"></a>尝试网桥配置</h3><p>似乎是网络方面的问题？搜了一下遇到这个问题的人还是不少，不过想起自己似乎略过了针对kvm进行网络方面的配置，这里补一下吧。<br>虚拟机采用桥接方式，使其可以获得与物理机同样级别的IP，参考<a href=\"http://www.centoscn.com/image-text/config/2016/0218/6765.html\" target=\"_blank\" rel=\"external\">这里</a><br>，另外还有<a href=\"http://blog.csdn.net/hzhsan/article/details/44098537/\" target=\"_blank\" rel=\"external\">更详细的参考</a>，包括了NAT模式的介绍。<br>下面我们为其配置网桥模式</p>\n<pre><code>cd /etc/sysconfig/network-scripts\nsudo cp ifcfg-em1 ifcfg-br1\n</code></pre><p>编辑ifcfg-em1，添加内容</p>\n<pre><code>BRIDGE=br1\n</code></pre><p>编辑ifcfg-br1,参考内容为</p>\n<pre><code>DEVICE=br1\nTYPE=Bridge\nONBOOT=yes\nNM_CONTROLLED=yes\nBOOTPROTO=dhcp\n</code></pre><p>因为我们这里没用固定的网段分配，指定静态ip是不明智的，所以直接将IPADDR等相关项省略，对于NM_CONTROLLED字段，参考内容中说明RedHat系统需要设置为NO，而CentOS似乎没有特别需要注意的说法，就保持默认的yes好了。</p>\n<p>保存好后，重启network service</p>\n<pre><code>sudo service NetworkManager stop\nsudo service network restart\nsudo service NetworkManager start\n</code></pre><p>可是呢，无论如何尝试，在ifcfg-em1中添加BRIDGE=br0之后，服务器就“断网”了。。<br>于是尝试virt-install,可供参考的<a href=\"http://www.361way.com/virt-install/2721.html\" target=\"_blank\" rel=\"external\">内容</a>，后来发现只要不恢复NetworkManager就好像没有问题，虽然ifconfig里em*一堆的error，<a href=\"https://www.chenyudong.com/archives/libvirt-kvm-bridge-network.html#i\" target=\"_blank\" rel=\"external\">这里</a>也是这样，看来应该没有大碍吧。还有<a href=\"http://www.cnblogs.com/jankie/archive/2012/10/19/2730826.html\" target=\"_blank\" rel=\"external\">这里</a>提到，确实需要关闭NetworkManager才可以使网桥正常运行。不过也有可能是地址变化了，所以连不上？似乎依然说不通。</p>\n<pre><code>virt-install -n PDMECENTOS \\\n-r 512 -vcpus=1 \\\n-c /home/node4/techbase/CentOS-6.7-x86_64-bin-DVD1.iso \\\n--hvm --os-type=linux \\\n--disk /home/node4/techbase/PDME.img \\\n--graphics vnc,listen=0.0.0.0,port=7789 \\\n--force --autostart\n</code></pre><p>好像是可以成功的，自动打开了一个VNC连接至创建的虚拟机实例，但是一直没动静，过了一会连接至物理服务器的VNC黑掉了，重新连接还是黑的并提示未加密链接。</p>\n<h2 id=\"笑着活下去。记录一下常用virsh命令\"><a href=\"#笑着活下去。记录一下常用virsh命令\" class=\"headerlink\" title=\"笑着活下去。记录一下常用virsh命令\"></a>笑着活下去。记录一下常用virsh命令</h2><ul>\n<li>virsh list #显示本地活动虚拟机</li>\n<li>virsh list –all #显示本地所有的虚拟机（活动的+不活动的）</li>\n<li>virsh define ubuntu.xml #通过配置文件定义一个虚拟机（这个虚拟机还不是活动的）</li>\n<li>virsh start ubuntu #启动名字为ubuntu的非活动虚拟机</li>\n<li>virsh create ubuntu.xml #创建虚拟机（创建后，虚拟机立即执行，成为活动主机）</li>\n<li>virsh suspend ubuntu #暂停虚拟机</li>\n<li>virsh resume ubuntu #启动暂停的虚拟机</li>\n<li>virsh shutdown ubuntu #正常关闭虚拟机</li>\n<li>virsh destroy ubuntu #强制关闭虚拟机</li>\n<li>virsh undefine ubuntu #移除ubuntu虚拟机</li>\n<li>virsh dumpxml ubuntu #显示虚拟机的当前配置文件（可能和定义虚拟机时的配置不同，因为当虚拟机启动时，需要给虚拟机分配id号、uuid、vnc端口号等等）</li>\n<li>virsh setmem ubuntu 512000 #给不活动虚拟机设置内存大小</li>\n<li>virsh setvcpus ubuntu 4 # 给不活动虚拟机设置cpu个数</li>\n<li>针对虚拟机操作</li>\n<li>virsh domid win03_3 #查看虚拟机的标识符</li>\n<li>virsh domname win03_2 #查看虚拟机的名称</li>\n<li>virsh domuuid win03_2 #查看虚拟机的 UUID</li>\n<li>virsh domstate win03_2 #查看虚拟机目前的状态</li>\n<li>virsh dominfo win03_2 #查看虚拟机的信息</li>\n<li>virsh console name #控制台进入指定虚拟机实例</li>\n</ul>\n<p>于是又经历了一次漫长的服务器重启，上面列出的virt-install命令是经过了一些修改后的样子，直接使用创建的img作为磁盘文件。当vncviewer启动并弹出之后，最好不要去动vnc窗口，这会造成安装过程中断。使用键盘在操作界面进行安装过程就可以啦。</p>\n<p>不过疑问还是有的，virt-install创建的虚拟机实例是如何配置所在ip及端口的呢？上面只是直接给vnc指定了一组参数。下面有进一步思考。<br>进入安装好的系统之后，只有一个root用户，此时可以先创建一个普通用户并设置密码</p>\n<pre><code>useradd -d /home/student student\npasswd student\n</code></pre><p>为了能够使该账户能够使用sudo，我们需要将其添加到sudo配置文件中去</p>\n<pre><code>su\nvisudo\n/ALL\n</code></pre><p>找到root ALL=(ALL) ALL，在下方添加</p>\n<pre><code>student ALL=(ALL) ALL\n</code></pre><p>退出并保存，完成。</p>\n<h2 id=\"配置virt-vnc连接\"><a href=\"#配置virt-vnc连接\" class=\"headerlink\" title=\"配置virt vnc连接\"></a>配置virt vnc连接</h2><p>上面提到了一个vnc连接kvm虚拟机的参数配置问题，这下也不得不面对一下了，因为很开心地设置好用户之后将虚拟机示例shutdown，然后现在重新启动之后不知道怎么再用vnc连接了，</p>\n<pre><code>vncviewer 0.0.0.0:1\n</code></pre><p>对了，记录一个Mac上好用的VNC，<a href=\"https://sourceforge.net/projects/cotvnc/\" target=\"_blank\" rel=\"external\">chicken of vnc</a>,恩主要是因为免费，图标简直太可爱。当然功能也是简单够用的，但是注意最好不要在建立连对就是下面的命令不起作用，输密码验证错误，我输的默认密码。。接的时候选全屏模式，会抽风。<br>那么接着尝试解决vnc连不上虚拟机的问题，尝试如下方法</p>\n<pre><code>virsh console PDMECENTOS\n</code></pre><p>结果是卡住不动了，搜索之后找到了<a href=\"http://www.linuxidc.com/Linux/2014-10/107891.htm\" target=\"_blank\" rel=\"external\">类似问题</a>，可是人家是vnc能连上虚拟机的情况啊。。。</p>\n<p>然后事情出现了转机，查看<a href=\"http://blog.csdn.net/taiyang1987912/article/details/50474219\" target=\"_blank\" rel=\"external\">这里</a>，前面配置虚拟主机vnc没啥好说的，默认就是那样，注意后面</p>\n<pre><code>virsh edit PDMECENTOS\n</code></pre><p>将端口值改为-1，之前被我照着另一个很像的教程改成了5910，最原本的默认值不记得了，嗯这里应该就可以配置和vnc相关的参数了，改好之后启动虚拟机，查看qemu-kvm运行的端口，不要使用：1，感觉这个需要虚拟机配置vncserver后进行验证才可用，通过进程端口直接连接显然更佳。（这里理解不是很到位，后面还是有进一步思考）</p>\n<pre><code>netstat -tunlp\n</code></pre><p>记得把终端全屏才能看见进程信息列，然后前面的ip:port就是vncviewer登陆所使用的参数啦。这个时候虚拟机并没有图形界面,我们可以安装一下</p>\n<pre><code>yum -y groupinstall Desktop\nyum -y groupinstall &quot;X Window System&quot;\n</code></pre><p>安装完成后就可以启动图形界面了</p>\n<pre><code>startx\n</code></pre><p>添加中文支持</p>\n<pre><code>yum -y groupinstall chinese-support\n</code></pre><p>设置开机自动进入图形界面</p>\n<pre><code>vim /etc/inittab\n</code></pre><p>将id:x:initdefautl中的x改成5即可</p>\n<h2 id=\"配置virt虚拟客户机桥接上网\"><a href=\"#配置virt虚拟客户机桥接上网\" class=\"headerlink\" title=\"配置virt虚拟客户机桥接上网\"></a>配置virt虚拟客户机桥接上网</h2><p><a href=\"https://www.chenyudong.com/archives/libvirt-kvm-bridge-network.html#i\" target=\"_blank\" rel=\"external\">参考内容</a></p>\n<pre><code>virsh edit PDMECENTOS\n</code></pre><p>添加内容</p>\n<pre><code>&lt;interface type=&quot;bridge&quot;&gt; &lt;!--虚拟机网络连接方式--&gt;\n&lt;source bridge=&quot;br0&quot; /&gt; &lt;!-- 当前主机网桥的名称--&gt;\n&lt;mac address=&quot;00:16:e4:9a:b3:6a&quot; /&gt; &lt;!--为虚拟机分配mac地址，务必唯一，否则dhcp获得同样ip,引起冲突，而我是从已经创建好的虚拟机里面抄的，后来发现这样做十分正确--&gt;\n&lt;/interface&gt;\n</code></pre><p>然后启动网卡，我们可以设置其随开机启动</p>\n<pre><code>ifconfig eth0 up\nvim /etc/sysconfig/network-scripts/ifcfg-eth0 #置ONBOOT=true\n\n这个时候运行ifconfig就可以看到eth0的信息啦，然而没有卵用，最后发现安装虚拟机应该还是需要root，否则重启虚拟机的时候tap vnet会有权限错误\n</code></pre><p>很奇怪重启服务器后执行命令会遇到locale unsupport错误，可以这么解决，虽然只是当时生效，重启后就恢复原样了。</p>\n<pre><code>export LC_ALL=C\n</code></pre><p>后来发现是mac上的终端有问题，进入其配置面板，去掉Adcanced选项卡中set locale …项前面的对勾就可以了。另外是修改系统语言的方法，比较推荐使用。</p>\n<pre><code>vim /etc/profile\n/export #找到export xx xx xxx语句，在前增加一行LANG=&quot;zh_CN.UTF-8&quot;,在后追加LANG\n</code></pre><p>然后重启系统即可生效。</p>\n<p>然后virt-install出现了无法启动vnc显示的问题，又照上面修改了虚拟机的监听端口为-1，然后再用vncviewer重连就好了（改之前重连也会无法启动显示），再然后直接安装又能启动vnc显示了，我晕，完全不懂怎么好的。对了，root用户就不要在普通用户目录里安装了，会有蜜汁文件权限问题。。</p>\n<p>最后只得注意的是对虚拟机配置的变更很可能要重启后才生效，不管什么情况，试一试最好，我这里的网桥配置就是删除libvirt自带的nat虚拟网桥再重启虚拟机就生效了。嗯不要使用普通用户运行virsh，很坑。另一个例子，我们进入图形界面后，可以给右键菜单添加打开终端的选项，也需要重启系统</p>\n<pre><code>sudo apt-get install nautilus-open-terminal #ubuntu\nsudo yum install nautilus-open-terminal #centos\n</code></pre><p>另外virsh shutdown命令需要对虚拟机进行<a href=\"http://www.bubuko.com/infodetail-771662.html\" target=\"_blank\" rel=\"external\">一定配置</a>才可用。</p>\n<h2 id=\"vnc直接连接kvm问题与进程监听地址端口的思考\"><a href=\"#vnc直接连接kvm问题与进程监听地址端口的思考\" class=\"headerlink\" title=\"vnc直接连接kvm问题与进程监听地址端口的思考\"></a>vnc直接连接kvm问题与进程监听地址端口的思考</h2><p>虚拟机终于是运行起来了，配置也到了一定程度，可以比较方便地使用了，但是出现了一个很奇怪的现象，直接在本地机器通过vnc连接虚拟机总是出现拒绝连接的提示，此时虚拟机中vncserver随系统启动，处于运行状态，可以输入如下命令查看</p>\n<pre><code>service vncserver status\n</code></pre><p>同时也排除了防火墙开放端口的问题，依然没有进展。虽然用shell连接是正常的，但还是很不甘心。</p>\n<p>然后就很无聊的了解了一下netstat里面出现的进程监听地址和端口，唉计网本来就没怎么学好，考完研后丢的也差不多了。首先是这个</p>\n<pre><code>127.0.0.1\n</code></pre><p>了解了一下，表示本机，另一个代称就是我们很熟悉的localhost，更神奇的是127.x.x.x其实都是一样的。如果一个进程监听这个ip，那就表示它实际上只能监听到本地的程序并作出回应。</p>\n<p>另外就是</p>\n<pre><code>0.0.0.0\n</code></pre><p>这个可不得了，表示一切ip，本机不认识的任何地址都可以归到这个地址里，监听这个地址的进程，当然机会对所有地址对应端口的通信作出反应啦。了解了这个，我们来看一下虚拟主机，虚拟机相应的vnc进程监听情况，也就是这会一个比较关键的命令的输出</p>\n<pre><code>netstat -tunlp\n</code></pre><p>首先是虚拟主机，当前得到的输出为</p>\n<table>\n<thead>\n<tr>\n<th>Proto</th>\n<th>Recv-Q</th>\n<th>Send-Q</th>\n<th>Local Address</th>\n<th>Foreign Address</th>\n<th>State</th>\n<th>PID/Program name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>tcp|        0|      0| 0.0.0.0:60989|               0.0.0.0:<em>|LISTEN|1892/rpc.statd|<br>|tcp|0|0| 0.0.0.0:5900|0.0.0.0:</em>|LISTEN|4012/qemu-kvm|<br>|tcp|0|0| 0.0.0.0:5901|0.0.0.0:<em>|LISTEN|2848/Xvnc<br>|tcp|0|0| 127.0.0.1:5902|0.0.0.0:</em>|LISTEN|2275/Xvnc|<br>用markdown画表格真是累人。我们看到qemu-kvm监听了所有内网ip的5900，也就是说只要vncviewer向5900端口发出连接请求，虚拟机进程就会响应，那么我们要如何访问呢？<br>1.在虚拟主机上，使用</p>\n<pre><code>vncviewer localhost:5900\n</code></pre><p>因为这个虚拟机进程是在虚拟主机上运行的，用本机ip定位就可以了。再看下一个，2848/Xvnc，监听了所有内网ip的5901端口，这个是虚拟主机的vncserver进程，验证方法是输入</p>\n<pre><code>service vncserver status\n</code></pre><p>进行验证，执行后会输出一样的PID，那么对于其他内网主机，使用如下命令即可通过vnc连接虚拟主机</p>\n<pre><code>vncviewer node4:5901\n</code></pre><p>看再下一项，注意其监听ip是127.0.0.1，这说明他只会相应本机进程，其他内网机器无法与其成功建立连接。<br>另外，vnc有自己的一套映射规则，默认从5900端口开始，vncviewer所接受参数中端口可用0替换，并递增对应，也就是说，如果此时通过内网机器远程虚拟主机，会有如下对应关系及情况</p>\n<pre><code>vncviewer node4:0 #实际远程到了虚拟主机上的5900监听虚拟机示例进程\nvncviewer node4:1 #连接到虚拟主机的5901，vncserver进程\nvncviewer node4:2 #虚拟主机本机ip监听端口，无法连接\n</code></pre><p>基于这些，我们来看一下虚拟机中的情况。先简单做一下“故障排除”,将Xvnc进程杀掉，此时查看vncserver情况，提示</p>\n<pre><code>Xvnc 已死，但是 subsys 被锁\n</code></pre><p>呵呵。<br>那么执行以下命令删除锁吧</p>\n<pre><code>rm -rf /var/lock/subsys/Xvnc\n</code></pre><p>然后将~/.vnc/下的.log以及.pid删除。重启虚拟机，让配置的vncserver服务自动启动，再查看进程监听情况<br>这里，并没有发现vncserver自动启动，于是输入</p>\n<pre><code>vncserver\n</code></pre><p>反馈信息为</p>\n<pre><code>You will require a password to access your desktops.\n\nPassword:\nVerify:\n\nNew &apos;localhost.localdomain:1 (student)&apos; desktop is localhost.localdomain:1\n\nCreating default startup script /home/student/.vnc/xstartup\nStarting applications specified in /home/student/.vnc/xstartup\nLog file is /home/student/.vnc/localhost.localdomain:1.log\n</code></pre><p>看起来还挺正常了，不小心又起了一次，于是出现了localhost.localdomain:2。。好的此查看进程占用情况(只取到需要看的那一行)</p>\n<table>\n<thead>\n<tr>\n<th>Proto</th>\n<th>Recv-Q</th>\n<th>Send-Q</th>\n<th>LocalAddress</th>\n<th>Foreign Address</th>\n<th>State</th>\n<th>PID/Program name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tcp</td>\n<td>0</td>\n<td>0</td>\n<td>0.0.0.0:5901</td>\n<td>0.0.0.0:*</td>\n<td>LISTEN</td>\n<td>2003/Xvnc</td>\n</tr>\n<tr>\n<td>tcp</td>\n<td>0</td>\n<td>0</td>\n<td>0.0.0.0:5902</td>\n<td>0.0.0.0:*</td>\n<td>LISTEN</td>\n<td>2369/Xvnc</td>\n</tr>\n</tbody>\n</table>\n<p>刚才明明还发现Xvnc监听的都是本地ip，但是测试后依然不能使用内网机器进行vnc远程，错误信息完全没有改变。先将其关闭</p>\n<pre><code>vncserver -kill :1\nvncserver -kill :2\n</code></pre><p>检查开放端口，没有异常，还是修改后的样子，开放了5901和5902,重新为当前用户设置密码，然后再检查自动启动配置，确认无误后重启虚拟机系统，发现vncserver自动启动了，可是监听ip又是之前的127.0.0.1，处于其他机器无法连接的状态，呵呵。这时自己再起一个vncserver则会监听所有ip，可是依然连不上。</p>\n","excerpt":"","more":"<h1 id=\"在linux上使用kvm，qemu，vnc等工具进行虚拟机定制以及qcow2镜像的生成\"><a href=\"#在linux上使用kvm，qemu，vnc等工具进行虚拟机定制以及qcow2镜像的生成\" class=\"headerlink\" title=\"在linux上使用kvm，qemu，vnc等工具进行虚拟机定制以及qcow2镜像的生成\"></a>在linux上使用kvm，qemu，vnc等工具进行虚拟机定制以及qcow2镜像的生成</h1><p>由于，这里有一个基于openstack的教学项目，所以，真的要把这个镜像做出来了，不然月底要完蛋。<br>服务器上应该是已经安装好了kvm相关环境，但是学弟遇到了一些问题一直没有解决，今天我自己看一看吧。用服务器来做总比用虚拟机强。</p>\n<h2 id=\"基础环境检查与简单配置\"><a href=\"#基础环境检查与简单配置\" class=\"headerlink\" title=\"基础环境检查与简单配置\"></a>基础环境检查与简单配置</h2><p><a href=\"http://www.111cn.net/sys/CentOS/87211.htm\">参考内容1</a><br><a href=\"http://www.vpsee.com/2012/02/create-centos-kvm-image-for-openstack-nova/\">参考内容2</a><br>Intel cpu</p>\n<pre><code>cat /proc/cpuinfo | grep &quot;vmx&quot;\n</code></pre><p>AMD cpu</p>\n<pre><code>cat /proc/cpuinfo | grep &quot;svm&quot;\n</code></pre><p>有输出内容就表示满足条件，否则进入bios更改虚拟化设置。然后安装kvm以及虚拟化所需相关软件包</p>\n<pre><code>yum install -y kvm virt-* libvirts bridge-utils qemu-img\n</code></pre><ul>\n<li>kvm：软件包中含有KVM内核模块，它在默认linux内核中提供kvm管理程序</li>\n<li>libvirts：安装虚拟机管理工具，使用virsh等命令来管理和控制虚拟机</li>\n<li>bridge-utils：设置网络网卡桥接</li>\n<li>virt-*：创建、克隆虚拟机命令，使用qemu命令来创建磁盘等。</li>\n<li>qemu-img：安装qemu组件，使用qemu命令来创建磁盘等。</li>\n</ul>\n<p>加载kvm模块</p>\n<pre><code>modprobe kvm-intel\n</code></pre><p>检查kvm模块是否被加载</p>\n<pre><code>lsmod | grep kvm\n</code></pre><p>最好是重启再确认一次</p>\n<pre><code>reboot\n</code></pre><h2 id=\"安装vncserver\"><a href=\"#安装vncserver\" class=\"headerlink\" title=\"安装vncserver\"></a>安装vncserver</h2><p>不是很确定服务器上是否有vnc server，检查一下，<a href=\"http://blog.163.com/likaifeng@126/blog/static/3209731020147614916768/\">参考链接</a></p>\n<pre><code>ls /etc/sysconfig | grep &quot;vncservers&quot;\n</code></pre><p>返回为空，于是先安装</p>\n<pre><code>sudo yum install tigervnc tigervnc-server -y\n</code></pre><p>简单配置一下</p>\n<pre><code>sudo vim /etc/sysconfig/vncservers\n</code></pre><p>去掉注释并修改</p>\n<pre><code>VNCSERVERS=&quot;2:node4&quot;\nVNCSERVERARGS[2]=&quot;-geometry 1024x768  -nolisten tcp -localhost&quot;\n</code></pre><p>然后配置一下当前用户的vnc登录密码</p>\n<pre><code>vncpasswd\n</code></pre><p>验证两次，然后启动vnc服务</p>\n<pre><code>vncserver &amp;\n</code></pre><p>也可以设置其随系统启动</p>\n<pre><code>chkconfig --level 5 vncserver on\nchkconfig --list | grep vnc\n</code></pre><p>这时候就可以使用vncviewer之类的客户端进行登录了，输入如下主机名:1即可（一般可以，但实际有其他情况）</p>\n<pre><code>node4:1\n</code></pre><h2 id=\"准备centOS-6-7镜像，创建KVM虚拟机并启动\"><a href=\"#准备centOS-6-7镜像，创建KVM虚拟机并启动\" class=\"headerlink\" title=\"准备centOS-6.7镜像，创建KVM虚拟机并启动\"></a>准备centOS-6.7镜像，创建KVM虚拟机并启动</h2><p>（这里遇到了一个坑，用普通用户进行虚拟机创建的话，后面通过virsh edit为虚拟机配置网桥后启动会出现权限错误，而直接使用root来创建虚拟机，网桥字段会被自动配好，再无报错，所以就不要尝试普通用户+sudo往坑里跳了。）<br>我们可以查看虚拟机列表，当然现在暂时没有任何虚拟机实例在运行</p>\n<pre><code>virsh list\n</code></pre><p>创建虚拟机硬盘文件，据说10GB可以了，不然后面使用费时费力</p>\n<pre><code>kvm-img create -f raw PDME.img 10G\n</code></pre><p>很不幸，出现 kvm-img: command not found了。搜索后发现好像qemu-img也是一样的，这里注意一下，可以直接用-f指定为qcow2格式，还省去后面转换img了</p>\n<pre><code>qemu-img create -f raw PDME.img 10G\n</code></pre><p>成功创建镜像，那么就可以使用centOS镜像将系统安装在这个创建的硬盘文件中了</p>\n<pre><code>sudo kvm -m 512 -cdrom CentOS-6.7-x86_64-bin-DVD1.iso\\\n -drive file=PDME.img -boot d -net nic -net tap -nographic -vnc :0\n</code></pre><p>-vnc参数用于打开vnc访问，这样就可以通过其他机器登录到这个界面安装系统了，同时注意须加上-net nic -net tap才能建立镜像到kvm网桥virbr0的映射，网络才通。</p>\n<p>不过这时候依然出现了找不到kvm命令的提示，我觉得适可而止惹。查阅后发现是新版本系统会把命令藏起来，推荐使用新命令virtual-install/virsh进行操作，而把qemu-kvm转移到了不起眼的地方/usr/libexex，那么就自己链接过来使用吧</p>\n<pre><code>sudo ln -sf /usr/libexec/qemu-kvm /usr/bin/kvm\n</code></pre><p>这好像还是和kvm-img没有关系。运行kvm创建虚拟机，报错如下</p>\n<pre><code>/etc/qemu-ifup: could not launch network script\nkvm: -net tap: Device &apos;tap&apos; could not be initialized\n</code></pre><h3 id=\"尝试网桥配置\"><a href=\"#尝试网桥配置\" class=\"headerlink\" title=\"尝试网桥配置\"></a>尝试网桥配置</h3><p>似乎是网络方面的问题？搜了一下遇到这个问题的人还是不少，不过想起自己似乎略过了针对kvm进行网络方面的配置，这里补一下吧。<br>虚拟机采用桥接方式，使其可以获得与物理机同样级别的IP，参考<a href=\"http://www.centoscn.com/image-text/config/2016/0218/6765.html\">这里</a><br>，另外还有<a href=\"http://blog.csdn.net/hzhsan/article/details/44098537/\">更详细的参考</a>，包括了NAT模式的介绍。<br>下面我们为其配置网桥模式</p>\n<pre><code>cd /etc/sysconfig/network-scripts\nsudo cp ifcfg-em1 ifcfg-br1\n</code></pre><p>编辑ifcfg-em1，添加内容</p>\n<pre><code>BRIDGE=br1\n</code></pre><p>编辑ifcfg-br1,参考内容为</p>\n<pre><code>DEVICE=br1\nTYPE=Bridge\nONBOOT=yes\nNM_CONTROLLED=yes\nBOOTPROTO=dhcp\n</code></pre><p>因为我们这里没用固定的网段分配，指定静态ip是不明智的，所以直接将IPADDR等相关项省略，对于NM_CONTROLLED字段，参考内容中说明RedHat系统需要设置为NO，而CentOS似乎没有特别需要注意的说法，就保持默认的yes好了。</p>\n<p>保存好后，重启network service</p>\n<pre><code>sudo service NetworkManager stop\nsudo service network restart\nsudo service NetworkManager start\n</code></pre><p>可是呢，无论如何尝试，在ifcfg-em1中添加BRIDGE=br0之后，服务器就“断网”了。。<br>于是尝试virt-install,可供参考的<a href=\"http://www.361way.com/virt-install/2721.html\">内容</a>，后来发现只要不恢复NetworkManager就好像没有问题，虽然ifconfig里em*一堆的error，<a href=\"https://www.chenyudong.com/archives/libvirt-kvm-bridge-network.html#i\">这里</a>也是这样，看来应该没有大碍吧。还有<a href=\"http://www.cnblogs.com/jankie/archive/2012/10/19/2730826.html\">这里</a>提到，确实需要关闭NetworkManager才可以使网桥正常运行。不过也有可能是地址变化了，所以连不上？似乎依然说不通。</p>\n<pre><code>virt-install -n PDMECENTOS \\\n-r 512 -vcpus=1 \\\n-c /home/node4/techbase/CentOS-6.7-x86_64-bin-DVD1.iso \\\n--hvm --os-type=linux \\\n--disk /home/node4/techbase/PDME.img \\\n--graphics vnc,listen=0.0.0.0,port=7789 \\\n--force --autostart\n</code></pre><p>好像是可以成功的，自动打开了一个VNC连接至创建的虚拟机实例，但是一直没动静，过了一会连接至物理服务器的VNC黑掉了，重新连接还是黑的并提示未加密链接。</p>\n<h2 id=\"笑着活下去。记录一下常用virsh命令\"><a href=\"#笑着活下去。记录一下常用virsh命令\" class=\"headerlink\" title=\"笑着活下去。记录一下常用virsh命令\"></a>笑着活下去。记录一下常用virsh命令</h2><ul>\n<li>virsh list #显示本地活动虚拟机</li>\n<li>virsh list –all #显示本地所有的虚拟机（活动的+不活动的）</li>\n<li>virsh define ubuntu.xml #通过配置文件定义一个虚拟机（这个虚拟机还不是活动的）</li>\n<li>virsh start ubuntu #启动名字为ubuntu的非活动虚拟机</li>\n<li>virsh create ubuntu.xml #创建虚拟机（创建后，虚拟机立即执行，成为活动主机）</li>\n<li>virsh suspend ubuntu #暂停虚拟机</li>\n<li>virsh resume ubuntu #启动暂停的虚拟机</li>\n<li>virsh shutdown ubuntu #正常关闭虚拟机</li>\n<li>virsh destroy ubuntu #强制关闭虚拟机</li>\n<li>virsh undefine ubuntu #移除ubuntu虚拟机</li>\n<li>virsh dumpxml ubuntu #显示虚拟机的当前配置文件（可能和定义虚拟机时的配置不同，因为当虚拟机启动时，需要给虚拟机分配id号、uuid、vnc端口号等等）</li>\n<li>virsh setmem ubuntu 512000 #给不活动虚拟机设置内存大小</li>\n<li>virsh setvcpus ubuntu 4 # 给不活动虚拟机设置cpu个数</li>\n<li>针对虚拟机操作</li>\n<li>virsh domid win03_3 #查看虚拟机的标识符</li>\n<li>virsh domname win03_2 #查看虚拟机的名称</li>\n<li>virsh domuuid win03_2 #查看虚拟机的 UUID</li>\n<li>virsh domstate win03_2 #查看虚拟机目前的状态</li>\n<li>virsh dominfo win03_2 #查看虚拟机的信息</li>\n<li>virsh console name #控制台进入指定虚拟机实例</li>\n</ul>\n<p>于是又经历了一次漫长的服务器重启，上面列出的virt-install命令是经过了一些修改后的样子，直接使用创建的img作为磁盘文件。当vncviewer启动并弹出之后，最好不要去动vnc窗口，这会造成安装过程中断。使用键盘在操作界面进行安装过程就可以啦。</p>\n<p>不过疑问还是有的，virt-install创建的虚拟机实例是如何配置所在ip及端口的呢？上面只是直接给vnc指定了一组参数。下面有进一步思考。<br>进入安装好的系统之后，只有一个root用户，此时可以先创建一个普通用户并设置密码</p>\n<pre><code>useradd -d /home/student student\npasswd student\n</code></pre><p>为了能够使该账户能够使用sudo，我们需要将其添加到sudo配置文件中去</p>\n<pre><code>su\nvisudo\n/ALL\n</code></pre><p>找到root ALL=(ALL) ALL，在下方添加</p>\n<pre><code>student ALL=(ALL) ALL\n</code></pre><p>退出并保存，完成。</p>\n<h2 id=\"配置virt-vnc连接\"><a href=\"#配置virt-vnc连接\" class=\"headerlink\" title=\"配置virt vnc连接\"></a>配置virt vnc连接</h2><p>上面提到了一个vnc连接kvm虚拟机的参数配置问题，这下也不得不面对一下了，因为很开心地设置好用户之后将虚拟机示例shutdown，然后现在重新启动之后不知道怎么再用vnc连接了，</p>\n<pre><code>vncviewer 0.0.0.0:1\n</code></pre><p>对了，记录一个Mac上好用的VNC，<a href=\"https://sourceforge.net/projects/cotvnc/\">chicken of vnc</a>,恩主要是因为免费，图标简直太可爱。当然功能也是简单够用的，但是注意最好不要在建立连对就是下面的命令不起作用，输密码验证错误，我输的默认密码。。接的时候选全屏模式，会抽风。<br>那么接着尝试解决vnc连不上虚拟机的问题，尝试如下方法</p>\n<pre><code>virsh console PDMECENTOS\n</code></pre><p>结果是卡住不动了，搜索之后找到了<a href=\"http://www.linuxidc.com/Linux/2014-10/107891.htm\">类似问题</a>，可是人家是vnc能连上虚拟机的情况啊。。。</p>\n<p>然后事情出现了转机，查看<a href=\"http://blog.csdn.net/taiyang1987912/article/details/50474219\">这里</a>，前面配置虚拟主机vnc没啥好说的，默认就是那样，注意后面</p>\n<pre><code>virsh edit PDMECENTOS\n</code></pre><p>将端口值改为-1，之前被我照着另一个很像的教程改成了5910，最原本的默认值不记得了，嗯这里应该就可以配置和vnc相关的参数了，改好之后启动虚拟机，查看qemu-kvm运行的端口，不要使用：1，感觉这个需要虚拟机配置vncserver后进行验证才可用，通过进程端口直接连接显然更佳。（这里理解不是很到位，后面还是有进一步思考）</p>\n<pre><code>netstat -tunlp\n</code></pre><p>记得把终端全屏才能看见进程信息列，然后前面的ip:port就是vncviewer登陆所使用的参数啦。这个时候虚拟机并没有图形界面,我们可以安装一下</p>\n<pre><code>yum -y groupinstall Desktop\nyum -y groupinstall &quot;X Window System&quot;\n</code></pre><p>安装完成后就可以启动图形界面了</p>\n<pre><code>startx\n</code></pre><p>添加中文支持</p>\n<pre><code>yum -y groupinstall chinese-support\n</code></pre><p>设置开机自动进入图形界面</p>\n<pre><code>vim /etc/inittab\n</code></pre><p>将id:x:initdefautl中的x改成5即可</p>\n<h2 id=\"配置virt虚拟客户机桥接上网\"><a href=\"#配置virt虚拟客户机桥接上网\" class=\"headerlink\" title=\"配置virt虚拟客户机桥接上网\"></a>配置virt虚拟客户机桥接上网</h2><p><a href=\"https://www.chenyudong.com/archives/libvirt-kvm-bridge-network.html#i\">参考内容</a></p>\n<pre><code>virsh edit PDMECENTOS\n</code></pre><p>添加内容</p>\n<pre><code>&lt;interface type=&quot;bridge&quot;&gt; &lt;!--虚拟机网络连接方式--&gt;\n&lt;source bridge=&quot;br0&quot; /&gt; &lt;!-- 当前主机网桥的名称--&gt;\n&lt;mac address=&quot;00:16:e4:9a:b3:6a&quot; /&gt; &lt;!--为虚拟机分配mac地址，务必唯一，否则dhcp获得同样ip,引起冲突，而我是从已经创建好的虚拟机里面抄的，后来发现这样做十分正确--&gt;\n&lt;/interface&gt;\n</code></pre><p>然后启动网卡，我们可以设置其随开机启动</p>\n<pre><code>ifconfig eth0 up\nvim /etc/sysconfig/network-scripts/ifcfg-eth0 #置ONBOOT=true\n\n这个时候运行ifconfig就可以看到eth0的信息啦，然而没有卵用，最后发现安装虚拟机应该还是需要root，否则重启虚拟机的时候tap vnet会有权限错误\n</code></pre><p>很奇怪重启服务器后执行命令会遇到locale unsupport错误，可以这么解决，虽然只是当时生效，重启后就恢复原样了。</p>\n<pre><code>export LC_ALL=C\n</code></pre><p>后来发现是mac上的终端有问题，进入其配置面板，去掉Adcanced选项卡中set locale …项前面的对勾就可以了。另外是修改系统语言的方法，比较推荐使用。</p>\n<pre><code>vim /etc/profile\n/export #找到export xx xx xxx语句，在前增加一行LANG=&quot;zh_CN.UTF-8&quot;,在后追加LANG\n</code></pre><p>然后重启系统即可生效。</p>\n<p>然后virt-install出现了无法启动vnc显示的问题，又照上面修改了虚拟机的监听端口为-1，然后再用vncviewer重连就好了（改之前重连也会无法启动显示），再然后直接安装又能启动vnc显示了，我晕，完全不懂怎么好的。对了，root用户就不要在普通用户目录里安装了，会有蜜汁文件权限问题。。</p>\n<p>最后只得注意的是对虚拟机配置的变更很可能要重启后才生效，不管什么情况，试一试最好，我这里的网桥配置就是删除libvirt自带的nat虚拟网桥再重启虚拟机就生效了。嗯不要使用普通用户运行virsh，很坑。另一个例子，我们进入图形界面后，可以给右键菜单添加打开终端的选项，也需要重启系统</p>\n<pre><code>sudo apt-get install nautilus-open-terminal #ubuntu\nsudo yum install nautilus-open-terminal #centos\n</code></pre><p>另外virsh shutdown命令需要对虚拟机进行<a href=\"http://www.bubuko.com/infodetail-771662.html\">一定配置</a>才可用。</p>\n<h2 id=\"vnc直接连接kvm问题与进程监听地址端口的思考\"><a href=\"#vnc直接连接kvm问题与进程监听地址端口的思考\" class=\"headerlink\" title=\"vnc直接连接kvm问题与进程监听地址端口的思考\"></a>vnc直接连接kvm问题与进程监听地址端口的思考</h2><p>虚拟机终于是运行起来了，配置也到了一定程度，可以比较方便地使用了，但是出现了一个很奇怪的现象，直接在本地机器通过vnc连接虚拟机总是出现拒绝连接的提示，此时虚拟机中vncserver随系统启动，处于运行状态，可以输入如下命令查看</p>\n<pre><code>service vncserver status\n</code></pre><p>同时也排除了防火墙开放端口的问题，依然没有进展。虽然用shell连接是正常的，但还是很不甘心。</p>\n<p>然后就很无聊的了解了一下netstat里面出现的进程监听地址和端口，唉计网本来就没怎么学好，考完研后丢的也差不多了。首先是这个</p>\n<pre><code>127.0.0.1\n</code></pre><p>了解了一下，表示本机，另一个代称就是我们很熟悉的localhost，更神奇的是127.x.x.x其实都是一样的。如果一个进程监听这个ip，那就表示它实际上只能监听到本地的程序并作出回应。</p>\n<p>另外就是</p>\n<pre><code>0.0.0.0\n</code></pre><p>这个可不得了，表示一切ip，本机不认识的任何地址都可以归到这个地址里，监听这个地址的进程，当然机会对所有地址对应端口的通信作出反应啦。了解了这个，我们来看一下虚拟主机，虚拟机相应的vnc进程监听情况，也就是这会一个比较关键的命令的输出</p>\n<pre><code>netstat -tunlp\n</code></pre><p>首先是虚拟主机，当前得到的输出为</p>\n<table>\n<thead>\n<tr>\n<th>Proto</th>\n<th>Recv-Q</th>\n<th>Send-Q</th>\n<th>Local Address</th>\n<th>Foreign Address</th>\n<th>State</th>\n<th>PID/Program name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>tcp|        0|      0| 0.0.0.0:60989|               0.0.0.0:<em>|LISTEN|1892/rpc.statd|<br>|tcp|0|0| 0.0.0.0:5900|0.0.0.0:</em>|LISTEN|4012/qemu-kvm|<br>|tcp|0|0| 0.0.0.0:5901|0.0.0.0:<em>|LISTEN|2848/Xvnc<br>|tcp|0|0| 127.0.0.1:5902|0.0.0.0:</em>|LISTEN|2275/Xvnc|<br>用markdown画表格真是累人。我们看到qemu-kvm监听了所有内网ip的5900，也就是说只要vncviewer向5900端口发出连接请求，虚拟机进程就会响应，那么我们要如何访问呢？<br>1.在虚拟主机上，使用</p>\n<pre><code>vncviewer localhost:5900\n</code></pre><p>因为这个虚拟机进程是在虚拟主机上运行的，用本机ip定位就可以了。再看下一个，2848/Xvnc，监听了所有内网ip的5901端口，这个是虚拟主机的vncserver进程，验证方法是输入</p>\n<pre><code>service vncserver status\n</code></pre><p>进行验证，执行后会输出一样的PID，那么对于其他内网主机，使用如下命令即可通过vnc连接虚拟主机</p>\n<pre><code>vncviewer node4:5901\n</code></pre><p>看再下一项，注意其监听ip是127.0.0.1，这说明他只会相应本机进程，其他内网机器无法与其成功建立连接。<br>另外，vnc有自己的一套映射规则，默认从5900端口开始，vncviewer所接受参数中端口可用0替换，并递增对应，也就是说，如果此时通过内网机器远程虚拟主机，会有如下对应关系及情况</p>\n<pre><code>vncviewer node4:0 #实际远程到了虚拟主机上的5900监听虚拟机示例进程\nvncviewer node4:1 #连接到虚拟主机的5901，vncserver进程\nvncviewer node4:2 #虚拟主机本机ip监听端口，无法连接\n</code></pre><p>基于这些，我们来看一下虚拟机中的情况。先简单做一下“故障排除”,将Xvnc进程杀掉，此时查看vncserver情况，提示</p>\n<pre><code>Xvnc 已死，但是 subsys 被锁\n</code></pre><p>呵呵。<br>那么执行以下命令删除锁吧</p>\n<pre><code>rm -rf /var/lock/subsys/Xvnc\n</code></pre><p>然后将~/.vnc/下的.log以及.pid删除。重启虚拟机，让配置的vncserver服务自动启动，再查看进程监听情况<br>这里，并没有发现vncserver自动启动，于是输入</p>\n<pre><code>vncserver\n</code></pre><p>反馈信息为</p>\n<pre><code>You will require a password to access your desktops.\n\nPassword:\nVerify:\n\nNew &apos;localhost.localdomain:1 (student)&apos; desktop is localhost.localdomain:1\n\nCreating default startup script /home/student/.vnc/xstartup\nStarting applications specified in /home/student/.vnc/xstartup\nLog file is /home/student/.vnc/localhost.localdomain:1.log\n</code></pre><p>看起来还挺正常了，不小心又起了一次，于是出现了localhost.localdomain:2。。好的此查看进程占用情况(只取到需要看的那一行)</p>\n<table>\n<thead>\n<tr>\n<th>Proto</th>\n<th>Recv-Q</th>\n<th>Send-Q</th>\n<th>LocalAddress</th>\n<th>Foreign Address</th>\n<th>State</th>\n<th>PID/Program name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tcp</td>\n<td>0</td>\n<td>0</td>\n<td>0.0.0.0:5901</td>\n<td>0.0.0.0:*</td>\n<td>LISTEN</td>\n<td>2003/Xvnc</td>\n</tr>\n<tr>\n<td>tcp</td>\n<td>0</td>\n<td>0</td>\n<td>0.0.0.0:5902</td>\n<td>0.0.0.0:*</td>\n<td>LISTEN</td>\n<td>2369/Xvnc</td>\n</tr>\n</tbody>\n</table>\n<p>刚才明明还发现Xvnc监听的都是本地ip，但是测试后依然不能使用内网机器进行vnc远程，错误信息完全没有改变。先将其关闭</p>\n<pre><code>vncserver -kill :1\nvncserver -kill :2\n</code></pre><p>检查开放端口，没有异常，还是修改后的样子，开放了5901和5902,重新为当前用户设置密码，然后再检查自动启动配置，确认无误后重启虚拟机系统，发现vncserver自动启动了，可是监听ip又是之前的127.0.0.1，处于其他机器无法连接的状态，呵呵。这时自己再起一个vncserver则会监听所有ip，可是依然连不上。</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-10-31T15:30:03.000Z","updated":"2016-10-31T15:30:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civ3y1qrt00076w22k1pcy79w","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"first post","date":"2016-10-31T15:45:36.000Z","comments":1,"_content":"# 如何使用git管理hexo源码目录并在多台电脑上同步\n费了些力气，终于是把hexo-gitPage搭起来了，因为觉得自己无论如何要开始做好记录，以便以后能够回顾。git是熟悉了又忘记，这篇文章就先记录一下如何使用git将hexo工程的源码一并管理，方便在不同的机器上撰写并发布post。\n[hexo main page](https://hexo.io)\n[Markdown gramma](http://www.appinn.com/markdown/#link)\n[Markdown入门指南](http://www.jianshu.com/p/1e402922ee32/)\n[hexo目录结构及作用](http://www.tuicool.com/articles/fiYVbaY)\n[neXt主题配置文档](https://github.com/iissnan/hexo-theme-next/wiki)\n\n## 首次配置hexo与node.js环境\n1.安装node.js，这里直接去[node.js官网](https://nodejs.org/en/)下载pkg进行安装就可以了。\n2.安装hexo\n\n\tmkdir blog//临时初始化目录\n\tcd blog\n\tnpm install hexo --no-optional #避免执行中报异常的方法\n\tnpm init\n\tnpm install\n\tnpm install hexo-deployer-git\n\t\n3.在github上创见博客仓库Marcteen.github.io， [配置ssh登录密钥](http://www.jianshu.com/p/a655bbc178e3)\n\n\tgit clone git@github.com:Marcteen/Marcteen.github.io.git\n\tgit branch hexo #管理工程源码的分支\n\tgit checkout hexo\n\tgit push origin hexo #将分支发布到github上\n此时我们可以在github上将仓库的默认分支设置为hexo，进一步的，我们可以为当前工程目录设置默认的push分支。\n\n\tgit config --global push.default \"current\"\n\t\n4.将刚才初始化的blog内容完全复制到博客仓库的本地目录中。\n\n\tcp ../blog/* ./\n\trm -rf ../blog #可以考虑将其删除，或者刚才直接使用mv命令\n\t\n5.配置.gitignore\n可以适当地忽略一些不需要同步的文件。\n\t\n6.将hexo内容同步到github仓库的hexo分支。\n\tgit add .\n\tgit commit -m “提交信息”\n\tgit push origin hexo\n\t\n7.配置部署参数\n\n\tvim _config.yml\n\t\n为deploy字段追加内容\n\n\ttype: git\n  \trepository: git@github.com:Marcteen/Marcteen.github.io.git\n  \tbranch: master\n\t\n到此应该就告一段落了\n## 在新机器上同步hexo仓库并进行撰文\n1.首先将博客仓库clone下来\n\ngit clone git@github.com:Marcteen/Marcteen.github.io\n\n但是这时候只有一个hexo分支，这是为什么呢？[参考内容](http://ilewen.com/questions/1940)\n\n2.重新配置hexo工程，这个可以参考上文首次配置中的第二步就可以了，唯一的不同就是不要执行hexo init，不然git工程配置文件就挂了。\n\n## 发布博文注意事项\n1.新建并编辑博文，[参考](http://blog.csdn.net/wizardforcel/article/details/40684575)\n\n\thexo new “title”\n\t\n常用的文章属性有\n\n* layout #post或page\n* title\t#文章的标题\t \n* date\t#文件的创建日期\n* updated\t#文件的修改日期\n* comments\t#是否开启评论\t\n* tags\t#标签\t \n* categories\t#分类\t \n* permalink\t#url中的名字\n\t\n2.依次执行,进行工程源码的远程同步，这样就没有只能在本地写博文的问题啦！\n\n\tgit add .\n\tgit commit -m “提交信息”\n\tgit push origin hexo\n\t\n3.然后才进行发布，感觉这样的顺序是最佳的。\n\thexo clean\n\thexo g\n\thexo -d\n\t\n4.本地预览。有时候github的速度真的挺慢，本地查看也不错，同时也可以让它不要占用一个终端\n\n\tnohup hexo s &\n\t然后按下ctrl+c，就能够不中断本地预览并退出了。不过这样要结束本地预览呢，毕竟这不是正式环境，进程号又不好记\n\t\n## 一点用git进行同步与合并分支的内容\n由于可能使用多台设备进行文章的编辑，所以需要进行同步动作，保持当前工作目录处于最新进展。\n首先是从远程主机取回更新，\n\n\tgit fetch origin hexo #<主机名> <分支名>\n\t\n然后将更新合并到本地分支，\n\n\tgit merge origin/hexo\n\t\n或者使用\n\n\tgit rebase\n\n实际中可能遇到冲突的情况，对于文件内容冲突，可以在文件中进行相关内容的编辑；而删除冲突则可直接将工作目录中的对应文件删除，然后执行\n\n\tgit add ...\n\tgit commit -m \"message\"\n\n然后就可以进行merge/rebase了。\t由于hexo博客涉及分支内容较少，此处暂时给出少量相关内容，以后再按需学习git吧~\n\t\n\n\t\n\t\n\n\n","source":"_posts/first-post.md","raw":"---\ntitle: first post\ndate: 2016-10-31 23:45:36\ntags: [hexo, post, git]\ncategories: [trials]\ncomments: true\n---\n# 如何使用git管理hexo源码目录并在多台电脑上同步\n费了些力气，终于是把hexo-gitPage搭起来了，因为觉得自己无论如何要开始做好记录，以便以后能够回顾。git是熟悉了又忘记，这篇文章就先记录一下如何使用git将hexo工程的源码一并管理，方便在不同的机器上撰写并发布post。\n[hexo main page](https://hexo.io)\n[Markdown gramma](http://www.appinn.com/markdown/#link)\n[Markdown入门指南](http://www.jianshu.com/p/1e402922ee32/)\n[hexo目录结构及作用](http://www.tuicool.com/articles/fiYVbaY)\n[neXt主题配置文档](https://github.com/iissnan/hexo-theme-next/wiki)\n\n## 首次配置hexo与node.js环境\n1.安装node.js，这里直接去[node.js官网](https://nodejs.org/en/)下载pkg进行安装就可以了。\n2.安装hexo\n\n\tmkdir blog//临时初始化目录\n\tcd blog\n\tnpm install hexo --no-optional #避免执行中报异常的方法\n\tnpm init\n\tnpm install\n\tnpm install hexo-deployer-git\n\t\n3.在github上创见博客仓库Marcteen.github.io， [配置ssh登录密钥](http://www.jianshu.com/p/a655bbc178e3)\n\n\tgit clone git@github.com:Marcteen/Marcteen.github.io.git\n\tgit branch hexo #管理工程源码的分支\n\tgit checkout hexo\n\tgit push origin hexo #将分支发布到github上\n此时我们可以在github上将仓库的默认分支设置为hexo，进一步的，我们可以为当前工程目录设置默认的push分支。\n\n\tgit config --global push.default \"current\"\n\t\n4.将刚才初始化的blog内容完全复制到博客仓库的本地目录中。\n\n\tcp ../blog/* ./\n\trm -rf ../blog #可以考虑将其删除，或者刚才直接使用mv命令\n\t\n5.配置.gitignore\n可以适当地忽略一些不需要同步的文件。\n\t\n6.将hexo内容同步到github仓库的hexo分支。\n\tgit add .\n\tgit commit -m “提交信息”\n\tgit push origin hexo\n\t\n7.配置部署参数\n\n\tvim _config.yml\n\t\n为deploy字段追加内容\n\n\ttype: git\n  \trepository: git@github.com:Marcteen/Marcteen.github.io.git\n  \tbranch: master\n\t\n到此应该就告一段落了\n## 在新机器上同步hexo仓库并进行撰文\n1.首先将博客仓库clone下来\n\ngit clone git@github.com:Marcteen/Marcteen.github.io\n\n但是这时候只有一个hexo分支，这是为什么呢？[参考内容](http://ilewen.com/questions/1940)\n\n2.重新配置hexo工程，这个可以参考上文首次配置中的第二步就可以了，唯一的不同就是不要执行hexo init，不然git工程配置文件就挂了。\n\n## 发布博文注意事项\n1.新建并编辑博文，[参考](http://blog.csdn.net/wizardforcel/article/details/40684575)\n\n\thexo new “title”\n\t\n常用的文章属性有\n\n* layout #post或page\n* title\t#文章的标题\t \n* date\t#文件的创建日期\n* updated\t#文件的修改日期\n* comments\t#是否开启评论\t\n* tags\t#标签\t \n* categories\t#分类\t \n* permalink\t#url中的名字\n\t\n2.依次执行,进行工程源码的远程同步，这样就没有只能在本地写博文的问题啦！\n\n\tgit add .\n\tgit commit -m “提交信息”\n\tgit push origin hexo\n\t\n3.然后才进行发布，感觉这样的顺序是最佳的。\n\thexo clean\n\thexo g\n\thexo -d\n\t\n4.本地预览。有时候github的速度真的挺慢，本地查看也不错，同时也可以让它不要占用一个终端\n\n\tnohup hexo s &\n\t然后按下ctrl+c，就能够不中断本地预览并退出了。不过这样要结束本地预览呢，毕竟这不是正式环境，进程号又不好记\n\t\n## 一点用git进行同步与合并分支的内容\n由于可能使用多台设备进行文章的编辑，所以需要进行同步动作，保持当前工作目录处于最新进展。\n首先是从远程主机取回更新，\n\n\tgit fetch origin hexo #<主机名> <分支名>\n\t\n然后将更新合并到本地分支，\n\n\tgit merge origin/hexo\n\t\n或者使用\n\n\tgit rebase\n\n实际中可能遇到冲突的情况，对于文件内容冲突，可以在文件中进行相关内容的编辑；而删除冲突则可直接将工作目录中的对应文件删除，然后执行\n\n\tgit add ...\n\tgit commit -m \"message\"\n\n然后就可以进行merge/rebase了。\t由于hexo博客涉及分支内容较少，此处暂时给出少量相关内容，以后再按需学习git吧~\n\t\n\n\t\n\t\n\n\n","slug":"first-post","published":1,"updated":"2016-11-04T15:35:25.000Z","layout":"post","photos":[],"link":"","_id":"civ3y1qrw00086w22xv2g6ejq","content":"<h1 id=\"如何使用git管理hexo源码目录并在多台电脑上同步\"><a href=\"#如何使用git管理hexo源码目录并在多台电脑上同步\" class=\"headerlink\" title=\"如何使用git管理hexo源码目录并在多台电脑上同步\"></a>如何使用git管理hexo源码目录并在多台电脑上同步</h1><p>费了些力气，终于是把hexo-gitPage搭起来了，因为觉得自己无论如何要开始做好记录，以便以后能够回顾。git是熟悉了又忘记，这篇文章就先记录一下如何使用git将hexo工程的源码一并管理，方便在不同的机器上撰写并发布post。<br><a href=\"https://hexo.io\" target=\"_blank\" rel=\"external\">hexo main page</a><br><a href=\"http://www.appinn.com/markdown/#link\" target=\"_blank\" rel=\"external\">Markdown gramma</a><br><a href=\"http://www.jianshu.com/p/1e402922ee32/\" target=\"_blank\" rel=\"external\">Markdown入门指南</a><br><a href=\"http://www.tuicool.com/articles/fiYVbaY\" target=\"_blank\" rel=\"external\">hexo目录结构及作用</a><br><a href=\"https://github.com/iissnan/hexo-theme-next/wiki\" target=\"_blank\" rel=\"external\">neXt主题配置文档</a></p>\n<h2 id=\"首次配置hexo与node-js环境\"><a href=\"#首次配置hexo与node-js环境\" class=\"headerlink\" title=\"首次配置hexo与node.js环境\"></a>首次配置hexo与node.js环境</h2><p>1.安装node.js，这里直接去<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">node.js官网</a>下载pkg进行安装就可以了。<br>2.安装hexo</p>\n<pre><code>mkdir blog//临时初始化目录\ncd blog\nnpm install hexo --no-optional #避免执行中报异常的方法\nnpm init\nnpm install\nnpm install hexo-deployer-git\n</code></pre><p>3.在github上创见博客仓库Marcteen.github.io， <a href=\"http://www.jianshu.com/p/a655bbc178e3\" target=\"_blank\" rel=\"external\">配置ssh登录密钥</a></p>\n<pre><code>git clone git@github.com:Marcteen/Marcteen.github.io.git\ngit branch hexo #管理工程源码的分支\ngit checkout hexo\ngit push origin hexo #将分支发布到github上\n</code></pre><p>此时我们可以在github上将仓库的默认分支设置为hexo，进一步的，我们可以为当前工程目录设置默认的push分支。</p>\n<pre><code>git config --global push.default &quot;current&quot;\n</code></pre><p>4.将刚才初始化的blog内容完全复制到博客仓库的本地目录中。</p>\n<pre><code>cp ../blog/* ./\nrm -rf ../blog #可以考虑将其删除，或者刚才直接使用mv命令\n</code></pre><p>5.配置.gitignore<br>可以适当地忽略一些不需要同步的文件。</p>\n<p>6.将hexo内容同步到github仓库的hexo分支。<br>    git add .<br>    git commit -m “提交信息”<br>    git push origin hexo</p>\n<p>7.配置部署参数</p>\n<pre><code>vim _config.yml\n</code></pre><p>为deploy字段追加内容</p>\n<pre><code>type: git\n  repository: git@github.com:Marcteen/Marcteen.github.io.git\n  branch: master\n</code></pre><p>到此应该就告一段落了</p>\n<h2 id=\"在新机器上同步hexo仓库并进行撰文\"><a href=\"#在新机器上同步hexo仓库并进行撰文\" class=\"headerlink\" title=\"在新机器上同步hexo仓库并进行撰文\"></a>在新机器上同步hexo仓库并进行撰文</h2><p>1.首先将博客仓库clone下来</p>\n<p>git clone git@github.com:Marcteen/Marcteen.github.io</p>\n<p>但是这时候只有一个hexo分支，这是为什么呢？<a href=\"http://ilewen.com/questions/1940\" target=\"_blank\" rel=\"external\">参考内容</a></p>\n<p>2.重新配置hexo工程，这个可以参考上文首次配置中的第二步就可以了，唯一的不同就是不要执行hexo init，不然git工程配置文件就挂了。</p>\n<h2 id=\"发布博文注意事项\"><a href=\"#发布博文注意事项\" class=\"headerlink\" title=\"发布博文注意事项\"></a>发布博文注意事项</h2><p>1.新建并编辑博文，<a href=\"http://blog.csdn.net/wizardforcel/article/details/40684575\" target=\"_blank\" rel=\"external\">参考</a></p>\n<pre><code>hexo new “title”\n</code></pre><p>常用的文章属性有</p>\n<ul>\n<li>layout #post或page</li>\n<li>title    #文章的标题     </li>\n<li>date    #文件的创建日期</li>\n<li>updated    #文件的修改日期</li>\n<li>comments    #是否开启评论    </li>\n<li>tags    #标签     </li>\n<li>categories    #分类     </li>\n<li>permalink    #url中的名字</li>\n</ul>\n<p>2.依次执行,进行工程源码的远程同步，这样就没有只能在本地写博文的问题啦！</p>\n<pre><code>git add .\ngit commit -m “提交信息”\ngit push origin hexo\n</code></pre><p>3.然后才进行发布，感觉这样的顺序是最佳的。<br>    hexo clean<br>    hexo g<br>    hexo -d</p>\n<p>4.本地预览。有时候github的速度真的挺慢，本地查看也不错，同时也可以让它不要占用一个终端</p>\n<pre><code>nohup hexo s &amp;\n然后按下ctrl+c，就能够不中断本地预览并退出了。不过这样要结束本地预览呢，毕竟这不是正式环境，进程号又不好记\n</code></pre><h2 id=\"一点用git进行同步与合并分支的内容\"><a href=\"#一点用git进行同步与合并分支的内容\" class=\"headerlink\" title=\"一点用git进行同步与合并分支的内容\"></a>一点用git进行同步与合并分支的内容</h2><p>由于可能使用多台设备进行文章的编辑，所以需要进行同步动作，保持当前工作目录处于最新进展。<br>首先是从远程主机取回更新，</p>\n<pre><code>git fetch origin hexo #&lt;主机名&gt; &lt;分支名&gt;\n</code></pre><p>然后将更新合并到本地分支，</p>\n<pre><code>git merge origin/hexo\n</code></pre><p>或者使用</p>\n<pre><code>git rebase\n</code></pre><p>实际中可能遇到冲突的情况，对于文件内容冲突，可以在文件中进行相关内容的编辑；而删除冲突则可直接将工作目录中的对应文件删除，然后执行</p>\n<pre><code>git add ...\ngit commit -m &quot;message&quot;\n</code></pre><p>然后就可以进行merge/rebase了。    由于hexo博客涉及分支内容较少，此处暂时给出少量相关内容，以后再按需学习git吧~</p>\n","excerpt":"","more":"<h1 id=\"如何使用git管理hexo源码目录并在多台电脑上同步\"><a href=\"#如何使用git管理hexo源码目录并在多台电脑上同步\" class=\"headerlink\" title=\"如何使用git管理hexo源码目录并在多台电脑上同步\"></a>如何使用git管理hexo源码目录并在多台电脑上同步</h1><p>费了些力气，终于是把hexo-gitPage搭起来了，因为觉得自己无论如何要开始做好记录，以便以后能够回顾。git是熟悉了又忘记，这篇文章就先记录一下如何使用git将hexo工程的源码一并管理，方便在不同的机器上撰写并发布post。<br><a href=\"https://hexo.io\">hexo main page</a><br><a href=\"http://www.appinn.com/markdown/#link\">Markdown gramma</a><br><a href=\"http://www.jianshu.com/p/1e402922ee32/\">Markdown入门指南</a><br><a href=\"http://www.tuicool.com/articles/fiYVbaY\">hexo目录结构及作用</a><br><a href=\"https://github.com/iissnan/hexo-theme-next/wiki\">neXt主题配置文档</a></p>\n<h2 id=\"首次配置hexo与node-js环境\"><a href=\"#首次配置hexo与node-js环境\" class=\"headerlink\" title=\"首次配置hexo与node.js环境\"></a>首次配置hexo与node.js环境</h2><p>1.安装node.js，这里直接去<a href=\"https://nodejs.org/en/\">node.js官网</a>下载pkg进行安装就可以了。<br>2.安装hexo</p>\n<pre><code>mkdir blog//临时初始化目录\ncd blog\nnpm install hexo --no-optional #避免执行中报异常的方法\nnpm init\nnpm install\nnpm install hexo-deployer-git\n</code></pre><p>3.在github上创见博客仓库Marcteen.github.io， <a href=\"http://www.jianshu.com/p/a655bbc178e3\">配置ssh登录密钥</a></p>\n<pre><code>git clone git@github.com:Marcteen/Marcteen.github.io.git\ngit branch hexo #管理工程源码的分支\ngit checkout hexo\ngit push origin hexo #将分支发布到github上\n</code></pre><p>此时我们可以在github上将仓库的默认分支设置为hexo，进一步的，我们可以为当前工程目录设置默认的push分支。</p>\n<pre><code>git config --global push.default &quot;current&quot;\n</code></pre><p>4.将刚才初始化的blog内容完全复制到博客仓库的本地目录中。</p>\n<pre><code>cp ../blog/* ./\nrm -rf ../blog #可以考虑将其删除，或者刚才直接使用mv命令\n</code></pre><p>5.配置.gitignore<br>可以适当地忽略一些不需要同步的文件。</p>\n<p>6.将hexo内容同步到github仓库的hexo分支。<br>    git add .<br>    git commit -m “提交信息”<br>    git push origin hexo</p>\n<p>7.配置部署参数</p>\n<pre><code>vim _config.yml\n</code></pre><p>为deploy字段追加内容</p>\n<pre><code>type: git\n  repository: git@github.com:Marcteen/Marcteen.github.io.git\n  branch: master\n</code></pre><p>到此应该就告一段落了</p>\n<h2 id=\"在新机器上同步hexo仓库并进行撰文\"><a href=\"#在新机器上同步hexo仓库并进行撰文\" class=\"headerlink\" title=\"在新机器上同步hexo仓库并进行撰文\"></a>在新机器上同步hexo仓库并进行撰文</h2><p>1.首先将博客仓库clone下来</p>\n<p>git clone git@github.com:Marcteen/Marcteen.github.io</p>\n<p>但是这时候只有一个hexo分支，这是为什么呢？<a href=\"http://ilewen.com/questions/1940\">参考内容</a></p>\n<p>2.重新配置hexo工程，这个可以参考上文首次配置中的第二步就可以了，唯一的不同就是不要执行hexo init，不然git工程配置文件就挂了。</p>\n<h2 id=\"发布博文注意事项\"><a href=\"#发布博文注意事项\" class=\"headerlink\" title=\"发布博文注意事项\"></a>发布博文注意事项</h2><p>1.新建并编辑博文，<a href=\"http://blog.csdn.net/wizardforcel/article/details/40684575\">参考</a></p>\n<pre><code>hexo new “title”\n</code></pre><p>常用的文章属性有</p>\n<ul>\n<li>layout #post或page</li>\n<li>title    #文章的标题     </li>\n<li>date    #文件的创建日期</li>\n<li>updated    #文件的修改日期</li>\n<li>comments    #是否开启评论    </li>\n<li>tags    #标签     </li>\n<li>categories    #分类     </li>\n<li>permalink    #url中的名字</li>\n</ul>\n<p>2.依次执行,进行工程源码的远程同步，这样就没有只能在本地写博文的问题啦！</p>\n<pre><code>git add .\ngit commit -m “提交信息”\ngit push origin hexo\n</code></pre><p>3.然后才进行发布，感觉这样的顺序是最佳的。<br>    hexo clean<br>    hexo g<br>    hexo -d</p>\n<p>4.本地预览。有时候github的速度真的挺慢，本地查看也不错，同时也可以让它不要占用一个终端</p>\n<pre><code>nohup hexo s &amp;\n然后按下ctrl+c，就能够不中断本地预览并退出了。不过这样要结束本地预览呢，毕竟这不是正式环境，进程号又不好记\n</code></pre><h2 id=\"一点用git进行同步与合并分支的内容\"><a href=\"#一点用git进行同步与合并分支的内容\" class=\"headerlink\" title=\"一点用git进行同步与合并分支的内容\"></a>一点用git进行同步与合并分支的内容</h2><p>由于可能使用多台设备进行文章的编辑，所以需要进行同步动作，保持当前工作目录处于最新进展。<br>首先是从远程主机取回更新，</p>\n<pre><code>git fetch origin hexo #&lt;主机名&gt; &lt;分支名&gt;\n</code></pre><p>然后将更新合并到本地分支，</p>\n<pre><code>git merge origin/hexo\n</code></pre><p>或者使用</p>\n<pre><code>git rebase\n</code></pre><p>实际中可能遇到冲突的情况，对于文件内容冲突，可以在文件中进行相关内容的编辑；而删除冲突则可直接将工作目录中的对应文件删除，然后执行</p>\n<pre><code>git add ...\ngit commit -m &quot;message&quot;\n</code></pre><p>然后就可以进行merge/rebase了。    由于hexo博客涉及分支内容较少，此处暂时给出少量相关内容，以后再按需学习git吧~</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"civ3y1qrd00016w22cqchsfu9","category_id":"civ3y1qrm00046w22h6wjz8wt","_id":"civ3y1qs1000b6w22gm0ajeff"},{"post_id":"civ3y1qrs00066w22notuvn9h","category_id":"civ3y1qry00096w22cdcor2j1","_id":"civ3y1qs3000e6w227vmn2d0k"},{"post_id":"civ3y1qrw00086w22xv2g6ejq","category_id":"civ3y1qry00096w22cdcor2j1","_id":"civ3y1qs4000g6w228mux4ac4"}],"PostTag":[{"post_id":"civ3y1qrd00016w22cqchsfu9","tag_id":"civ3y1qrq00056w22p8boy7l8","_id":"civ3y1qs6000i6w22vpv789lc"},{"post_id":"civ3y1qrd00016w22cqchsfu9","tag_id":"civ3y1qry000a6w22hfosmddz","_id":"civ3y1qs6000j6w22glwjx8t4"},{"post_id":"civ3y1qrd00016w22cqchsfu9","tag_id":"civ3y1qs2000d6w223x43y3vj","_id":"civ3y1qs7000l6w22ffm5fy3n"},{"post_id":"civ3y1qrd00016w22cqchsfu9","tag_id":"civ3y1qs4000f6w223r8xed4q","_id":"civ3y1qs7000m6w2214v2zpwg"},{"post_id":"civ3y1qrs00066w22notuvn9h","tag_id":"civ3y1qs4000h6w225aa9pdbt","_id":"civ3y1qs8000p6w226gwpu3qy"},{"post_id":"civ3y1qrs00066w22notuvn9h","tag_id":"civ3y1qs6000k6w22jemevyiq","_id":"civ3y1qs8000q6w22n4xbutep"},{"post_id":"civ3y1qrs00066w22notuvn9h","tag_id":"civ3y1qs7000n6w224bsnml6p","_id":"civ3y1qs9000s6w22vf6ynjrn"},{"post_id":"civ3y1qrw00086w22xv2g6ejq","tag_id":"civ3y1qs7000o6w22kxgbn6y1","_id":"civ3y1qsa000u6w220tg95jtj"},{"post_id":"civ3y1qrw00086w22xv2g6ejq","tag_id":"civ3y1qs9000r6w22j18fv10v","_id":"civ3y1qsa000v6w22jilei0wz"},{"post_id":"civ3y1qrw00086w22xv2g6ejq","tag_id":"civ3y1qsa000t6w22p7mks6mj","_id":"civ3y1qsa000w6w22lz4ct1m3"}],"Tag":[{"name":"linux","_id":"civ3y1qrq00056w22p8boy7l8"},{"name":"Unix","_id":"civ3y1qry000a6w22hfosmddz"},{"name":"OSX","_id":"civ3y1qs2000d6w223x43y3vj"},{"name":"link","_id":"civ3y1qs4000f6w223r8xed4q"},{"name":"Linux","_id":"civ3y1qs4000h6w225aa9pdbt"},{"name":"KVM","_id":"civ3y1qs6000k6w22jemevyiq"},{"name":"openstack","_id":"civ3y1qs7000n6w224bsnml6p"},{"name":"hexo","_id":"civ3y1qs7000o6w22kxgbn6y1"},{"name":"post","_id":"civ3y1qs9000r6w22j18fv10v"},{"name":"git","_id":"civ3y1qsa000t6w22p7mks6mj"}]}}